/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClickstreamBody struct for ClickstreamBody
type ClickstreamBody struct {
	// Clickstream brand identifier
	BrandGuid *string `json:"brand_guid,omitempty"`
}

// NewClickstreamBody instantiates a new ClickstreamBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClickstreamBody() *ClickstreamBody {
	this := ClickstreamBody{}
	return &this
}

// NewClickstreamBodyWithDefaults instantiates a new ClickstreamBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClickstreamBodyWithDefaults() *ClickstreamBody {
	this := ClickstreamBody{}
	return &this
}

// GetBrandGuid returns the BrandGuid field value if set, zero value otherwise.
func (o *ClickstreamBody) GetBrandGuid() string {
	if o == nil || o.BrandGuid == nil {
		var ret string
		return ret
	}
	return *o.BrandGuid
}

// GetBrandGuidOk returns a tuple with the BrandGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamBody) GetBrandGuidOk() (*string, bool) {
	if o == nil || o.BrandGuid == nil {
		return nil, false
	}
	return o.BrandGuid, true
}

// HasBrandGuid returns a boolean if a field has been set.
func (o *ClickstreamBody) HasBrandGuid() bool {
	if o != nil && o.BrandGuid != nil {
		return true
	}

	return false
}

// SetBrandGuid gets a reference to the given string and assigns it to the BrandGuid field.
func (o *ClickstreamBody) SetBrandGuid(v string) {
	o.BrandGuid = &v
}

func (o ClickstreamBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BrandGuid != nil {
		toSerialize["brand_guid"] = o.BrandGuid
	}
	return json.Marshal(toSerialize)
}

type NullableClickstreamBody struct {
	value *ClickstreamBody
	isSet bool
}

func (v NullableClickstreamBody) Get() *ClickstreamBody {
	return v.value
}

func (v *NullableClickstreamBody) Set(val *ClickstreamBody) {
	v.value = val
	v.isSet = true
}

func (v NullableClickstreamBody) IsSet() bool {
	return v.isSet
}

func (v *NullableClickstreamBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClickstreamBody(val *ClickstreamBody) *NullableClickstreamBody {
	return &NullableClickstreamBody{value: val, isSet: true}
}

func (v NullableClickstreamBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClickstreamBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
