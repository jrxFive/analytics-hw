/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CampaignClickData struct for CampaignClickData
type CampaignClickData struct {
	Ts     *int32 `json:"ts,omitempty"`
	Clicks *int32 `json:"clicks,omitempty"`
}

// NewCampaignClickData instantiates a new CampaignClickData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignClickData() *CampaignClickData {
	this := CampaignClickData{}
	return &this
}

// NewCampaignClickDataWithDefaults instantiates a new CampaignClickData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignClickDataWithDefaults() *CampaignClickData {
	this := CampaignClickData{}
	return &this
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *CampaignClickData) GetTs() int32 {
	if o == nil || o.Ts == nil {
		var ret int32
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignClickData) GetTsOk() (*int32, bool) {
	if o == nil || o.Ts == nil {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *CampaignClickData) HasTs() bool {
	if o != nil && o.Ts != nil {
		return true
	}

	return false
}

// SetTs gets a reference to the given int32 and assigns it to the Ts field.
func (o *CampaignClickData) SetTs(v int32) {
	o.Ts = &v
}

// GetClicks returns the Clicks field value if set, zero value otherwise.
func (o *CampaignClickData) GetClicks() int32 {
	if o == nil || o.Clicks == nil {
		var ret int32
		return ret
	}
	return *o.Clicks
}

// GetClicksOk returns a tuple with the Clicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignClickData) GetClicksOk() (*int32, bool) {
	if o == nil || o.Clicks == nil {
		return nil, false
	}
	return o.Clicks, true
}

// HasClicks returns a boolean if a field has been set.
func (o *CampaignClickData) HasClicks() bool {
	if o != nil && o.Clicks != nil {
		return true
	}

	return false
}

// SetClicks gets a reference to the given int32 and assigns it to the Clicks field.
func (o *CampaignClickData) SetClicks(v int32) {
	o.Clicks = &v
}

func (o CampaignClickData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ts != nil {
		toSerialize["ts"] = o.Ts
	}
	if o.Clicks != nil {
		toSerialize["clicks"] = o.Clicks
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignClickData struct {
	value *CampaignClickData
	isSet bool
}

func (v NullableCampaignClickData) Get() *CampaignClickData {
	return v.value
}

func (v *NullableCampaignClickData) Set(val *CampaignClickData) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignClickData) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignClickData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignClickData(val *CampaignClickData) *NullableCampaignClickData {
	return &NullableCampaignClickData{value: val, isSet: true}
}

func (v NullableCampaignClickData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignClickData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
