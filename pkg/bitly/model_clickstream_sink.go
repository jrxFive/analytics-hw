/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ClickstreamSink struct for ClickstreamSink
type ClickstreamSink struct {
	// Descriptive name for the sink
	Name *string `json:"name,omitempty"`
	// Delivery schedule
	Schedule *string `json:"schedule,omitempty"`
	// Time of deactivation, if any
	Deactivated *time.Time `json:"deactivated,omitempty"`
	// Location of the sink
	Destination *string `json:"destination,omitempty"`
	// Last modified time
	Modified *time.Time `json:"modified,omitempty"`
	// Sink creation time
	Created *time.Time `json:"created,omitempty"`
	// Sink origin ID classification
	SinkOriginId *int32 `json:"sink_origin_id,omitempty"`
	// Unique short id of client
	ClientId *string `json:"client_id,omitempty"`
	// Provider of sink
	Provider *string `json:"provider,omitempty"`
	// Last synced time
	LastSync *time.Time `json:"last_sync,omitempty"`
	// Unique short id
	Id *string `json:"id,omitempty"`
	// Unique short id of clickstream
	ClickstreamId *string `json:"clickstream_id,omitempty"`
}

// NewClickstreamSink instantiates a new ClickstreamSink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClickstreamSink() *ClickstreamSink {
	this := ClickstreamSink{}
	return &this
}

// NewClickstreamSinkWithDefaults instantiates a new ClickstreamSink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClickstreamSinkWithDefaults() *ClickstreamSink {
	this := ClickstreamSink{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClickstreamSink) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClickstreamSink) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClickstreamSink) SetName(v string) {
	o.Name = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ClickstreamSink) GetSchedule() string {
	if o == nil || o.Schedule == nil {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetScheduleOk() (*string, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *ClickstreamSink) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *ClickstreamSink) SetSchedule(v string) {
	o.Schedule = &v
}

// GetDeactivated returns the Deactivated field value if set, zero value otherwise.
func (o *ClickstreamSink) GetDeactivated() time.Time {
	if o == nil || o.Deactivated == nil {
		var ret time.Time
		return ret
	}
	return *o.Deactivated
}

// GetDeactivatedOk returns a tuple with the Deactivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetDeactivatedOk() (*time.Time, bool) {
	if o == nil || o.Deactivated == nil {
		return nil, false
	}
	return o.Deactivated, true
}

// HasDeactivated returns a boolean if a field has been set.
func (o *ClickstreamSink) HasDeactivated() bool {
	if o != nil && o.Deactivated != nil {
		return true
	}

	return false
}

// SetDeactivated gets a reference to the given time.Time and assigns it to the Deactivated field.
func (o *ClickstreamSink) SetDeactivated(v time.Time) {
	o.Deactivated = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *ClickstreamSink) GetDestination() string {
	if o == nil || o.Destination == nil {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetDestinationOk() (*string, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *ClickstreamSink) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *ClickstreamSink) SetDestination(v string) {
	o.Destination = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *ClickstreamSink) GetModified() time.Time {
	if o == nil || o.Modified == nil {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetModifiedOk() (*time.Time, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *ClickstreamSink) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *ClickstreamSink) SetModified(v time.Time) {
	o.Modified = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ClickstreamSink) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ClickstreamSink) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ClickstreamSink) SetCreated(v time.Time) {
	o.Created = &v
}

// GetSinkOriginId returns the SinkOriginId field value if set, zero value otherwise.
func (o *ClickstreamSink) GetSinkOriginId() int32 {
	if o == nil || o.SinkOriginId == nil {
		var ret int32
		return ret
	}
	return *o.SinkOriginId
}

// GetSinkOriginIdOk returns a tuple with the SinkOriginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetSinkOriginIdOk() (*int32, bool) {
	if o == nil || o.SinkOriginId == nil {
		return nil, false
	}
	return o.SinkOriginId, true
}

// HasSinkOriginId returns a boolean if a field has been set.
func (o *ClickstreamSink) HasSinkOriginId() bool {
	if o != nil && o.SinkOriginId != nil {
		return true
	}

	return false
}

// SetSinkOriginId gets a reference to the given int32 and assigns it to the SinkOriginId field.
func (o *ClickstreamSink) SetSinkOriginId(v int32) {
	o.SinkOriginId = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ClickstreamSink) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ClickstreamSink) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ClickstreamSink) SetClientId(v string) {
	o.ClientId = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ClickstreamSink) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ClickstreamSink) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ClickstreamSink) SetProvider(v string) {
	o.Provider = &v
}

// GetLastSync returns the LastSync field value if set, zero value otherwise.
func (o *ClickstreamSink) GetLastSync() time.Time {
	if o == nil || o.LastSync == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSync
}

// GetLastSyncOk returns a tuple with the LastSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetLastSyncOk() (*time.Time, bool) {
	if o == nil || o.LastSync == nil {
		return nil, false
	}
	return o.LastSync, true
}

// HasLastSync returns a boolean if a field has been set.
func (o *ClickstreamSink) HasLastSync() bool {
	if o != nil && o.LastSync != nil {
		return true
	}

	return false
}

// SetLastSync gets a reference to the given time.Time and assigns it to the LastSync field.
func (o *ClickstreamSink) SetLastSync(v time.Time) {
	o.LastSync = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClickstreamSink) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClickstreamSink) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClickstreamSink) SetId(v string) {
	o.Id = &v
}

// GetClickstreamId returns the ClickstreamId field value if set, zero value otherwise.
func (o *ClickstreamSink) GetClickstreamId() string {
	if o == nil || o.ClickstreamId == nil {
		var ret string
		return ret
	}
	return *o.ClickstreamId
}

// GetClickstreamIdOk returns a tuple with the ClickstreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClickstreamSink) GetClickstreamIdOk() (*string, bool) {
	if o == nil || o.ClickstreamId == nil {
		return nil, false
	}
	return o.ClickstreamId, true
}

// HasClickstreamId returns a boolean if a field has been set.
func (o *ClickstreamSink) HasClickstreamId() bool {
	if o != nil && o.ClickstreamId != nil {
		return true
	}

	return false
}

// SetClickstreamId gets a reference to the given string and assigns it to the ClickstreamId field.
func (o *ClickstreamSink) SetClickstreamId(v string) {
	o.ClickstreamId = &v
}

func (o ClickstreamSink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.Deactivated != nil {
		toSerialize["deactivated"] = o.Deactivated
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.SinkOriginId != nil {
		toSerialize["sink_origin_id"] = o.SinkOriginId
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.LastSync != nil {
		toSerialize["last_sync"] = o.LastSync
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ClickstreamId != nil {
		toSerialize["clickstream_id"] = o.ClickstreamId
	}
	return json.Marshal(toSerialize)
}

type NullableClickstreamSink struct {
	value *ClickstreamSink
	isSet bool
}

func (v NullableClickstreamSink) Get() *ClickstreamSink {
	return v.value
}

func (v *NullableClickstreamSink) Set(val *ClickstreamSink) {
	v.value = val
	v.isSet = true
}

func (v NullableClickstreamSink) IsSet() bool {
	return v.isSet
}

func (v *NullableClickstreamSink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClickstreamSink(val *ClickstreamSink) *NullableClickstreamSink {
	return &NullableClickstreamSink{value: val, isSet: true}
}

func (v NullableClickstreamSink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClickstreamSink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
