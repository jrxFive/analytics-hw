/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BSDSearchResults struct for BSDSearchResults
type BSDSearchResults struct {
	Results *[]BSDSearchResult `json:"results,omitempty"`
}

// NewBSDSearchResults instantiates a new BSDSearchResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBSDSearchResults() *BSDSearchResults {
	this := BSDSearchResults{}
	return &this
}

// NewBSDSearchResultsWithDefaults instantiates a new BSDSearchResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBSDSearchResultsWithDefaults() *BSDSearchResults {
	this := BSDSearchResults{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *BSDSearchResults) GetResults() []BSDSearchResult {
	if o == nil || o.Results == nil {
		var ret []BSDSearchResult
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BSDSearchResults) GetResultsOk() (*[]BSDSearchResult, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *BSDSearchResults) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []BSDSearchResult and assigns it to the Results field.
func (o *BSDSearchResults) SetResults(v []BSDSearchResult) {
	o.Results = &v
}

func (o BSDSearchResults) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableBSDSearchResults struct {
	value *BSDSearchResults
	isSet bool
}

func (v NullableBSDSearchResults) Get() *BSDSearchResults {
	return v.value
}

func (v *NullableBSDSearchResults) Set(val *BSDSearchResults) {
	v.value = val
	v.isSet = true
}

func (v NullableBSDSearchResults) IsSet() bool {
	return v.isSet
}

func (v *NullableBSDSearchResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBSDSearchResults(val *BSDSearchResults) *NullableBSDSearchResults {
	return &NullableBSDSearchResults{value: val, isSet: true}
}

func (v NullableBSDSearchResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBSDSearchResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
