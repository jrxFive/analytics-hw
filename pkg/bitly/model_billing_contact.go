/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BillingContact struct for BillingContact
type BillingContact struct {
	FirstName        *string `json:"first_name,omitempty"`
	LastName         *string `json:"last_name,omitempty"`
	Description      *string `json:"description,omitempty"`
	Phone            *string `json:"phone,omitempty"`
	BillingContactId *string `json:"billing_contact_id,omitempty"`
	Email            *string `json:"email,omitempty"`
}

// NewBillingContact instantiates a new BillingContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingContact() *BillingContact {
	this := BillingContact{}
	return &this
}

// NewBillingContactWithDefaults instantiates a new BillingContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingContactWithDefaults() *BillingContact {
	this := BillingContact{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *BillingContact) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingContact) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *BillingContact) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *BillingContact) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *BillingContact) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingContact) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *BillingContact) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *BillingContact) SetLastName(v string) {
	o.LastName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BillingContact) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingContact) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BillingContact) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BillingContact) SetDescription(v string) {
	o.Description = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *BillingContact) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingContact) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *BillingContact) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *BillingContact) SetPhone(v string) {
	o.Phone = &v
}

// GetBillingContactId returns the BillingContactId field value if set, zero value otherwise.
func (o *BillingContact) GetBillingContactId() string {
	if o == nil || o.BillingContactId == nil {
		var ret string
		return ret
	}
	return *o.BillingContactId
}

// GetBillingContactIdOk returns a tuple with the BillingContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingContact) GetBillingContactIdOk() (*string, bool) {
	if o == nil || o.BillingContactId == nil {
		return nil, false
	}
	return o.BillingContactId, true
}

// HasBillingContactId returns a boolean if a field has been set.
func (o *BillingContact) HasBillingContactId() bool {
	if o != nil && o.BillingContactId != nil {
		return true
	}

	return false
}

// SetBillingContactId gets a reference to the given string and assigns it to the BillingContactId field.
func (o *BillingContact) SetBillingContactId(v string) {
	o.BillingContactId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BillingContact) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingContact) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BillingContact) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BillingContact) SetEmail(v string) {
	o.Email = &v
}

func (o BillingContact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.BillingContactId != nil {
		toSerialize["billing_contact_id"] = o.BillingContactId
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableBillingContact struct {
	value *BillingContact
	isSet bool
}

func (v NullableBillingContact) Get() *BillingContact {
	return v.value
}

func (v *NullableBillingContact) Set(val *BillingContact) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingContact) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingContact(val *BillingContact) *NullableBillingContact {
	return &NullableBillingContact{value: val, isSet: true}
}

func (v NullableBillingContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
