/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExpandedBitlink struct for ExpandedBitlink
type ExpandedBitlink struct {
	LongUrl   *string `json:"long_url,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Link      *string `json:"link,omitempty"`
	Id        *string `json:"id,omitempty"`
}

// NewExpandedBitlink instantiates a new ExpandedBitlink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpandedBitlink() *ExpandedBitlink {
	this := ExpandedBitlink{}
	return &this
}

// NewExpandedBitlinkWithDefaults instantiates a new ExpandedBitlink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpandedBitlinkWithDefaults() *ExpandedBitlink {
	this := ExpandedBitlink{}
	return &this
}

// GetLongUrl returns the LongUrl field value if set, zero value otherwise.
func (o *ExpandedBitlink) GetLongUrl() string {
	if o == nil || o.LongUrl == nil {
		var ret string
		return ret
	}
	return *o.LongUrl
}

// GetLongUrlOk returns a tuple with the LongUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpandedBitlink) GetLongUrlOk() (*string, bool) {
	if o == nil || o.LongUrl == nil {
		return nil, false
	}
	return o.LongUrl, true
}

// HasLongUrl returns a boolean if a field has been set.
func (o *ExpandedBitlink) HasLongUrl() bool {
	if o != nil && o.LongUrl != nil {
		return true
	}

	return false
}

// SetLongUrl gets a reference to the given string and assigns it to the LongUrl field.
func (o *ExpandedBitlink) SetLongUrl(v string) {
	o.LongUrl = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ExpandedBitlink) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpandedBitlink) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ExpandedBitlink) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ExpandedBitlink) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ExpandedBitlink) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpandedBitlink) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ExpandedBitlink) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *ExpandedBitlink) SetLink(v string) {
	o.Link = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExpandedBitlink) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpandedBitlink) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExpandedBitlink) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExpandedBitlink) SetId(v string) {
	o.Id = &v
}

func (o ExpandedBitlink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LongUrl != nil {
		toSerialize["long_url"] = o.LongUrl
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableExpandedBitlink struct {
	value *ExpandedBitlink
	isSet bool
}

func (v NullableExpandedBitlink) Get() *ExpandedBitlink {
	return v.value
}

func (v *NullableExpandedBitlink) Set(val *ExpandedBitlink) {
	v.value = val
	v.isSet = true
}

func (v NullableExpandedBitlink) IsSet() bool {
	return v.isSet
}

func (v *NullableExpandedBitlink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpandedBitlink(val *ExpandedBitlink) *NullableExpandedBitlink {
	return &NullableExpandedBitlink{value: val, isSet: true}
}

func (v NullableExpandedBitlink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpandedBitlink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
