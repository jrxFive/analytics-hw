/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Tier a single tier
type Tier struct {
	DisplayName        *string                     `json:"display_name,omitempty"`
	Name               *string                     `json:"name,omitempty"`
	Family             *string                     `json:"family,omitempty"`
	Price              *int32                      `json:"price,omitempty"`
	BillingPeriodType  *string                     `json:"billing_period_type,omitempty"`
	ConsumableFeatures *[]DefaultConsumableFeature `json:"consumable_features,omitempty"`
	SortOrder          *int32                      `json:"sort_order,omitempty"`
	IsSelfService      *bool                       `json:"is_self_service,omitempty"`
	AccessFeatures     *[]DefaultAccessFeature     `json:"access_features,omitempty"`
	DisplayIcon        *string                     `json:"display_icon,omitempty"`
	IsPaid             *bool                       `json:"is_paid,omitempty"`
	Description        *string                     `json:"description,omitempty"`
}

// NewTier instantiates a new Tier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTier() *Tier {
	this := Tier{}
	return &this
}

// NewTierWithDefaults instantiates a new Tier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTierWithDefaults() *Tier {
	this := Tier{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Tier) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Tier) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Tier) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Tier) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Tier) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Tier) SetName(v string) {
	o.Name = &v
}

// GetFamily returns the Family field value if set, zero value otherwise.
func (o *Tier) GetFamily() string {
	if o == nil || o.Family == nil {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetFamilyOk() (*string, bool) {
	if o == nil || o.Family == nil {
		return nil, false
	}
	return o.Family, true
}

// HasFamily returns a boolean if a field has been set.
func (o *Tier) HasFamily() bool {
	if o != nil && o.Family != nil {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *Tier) SetFamily(v string) {
	o.Family = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Tier) GetPrice() int32 {
	if o == nil || o.Price == nil {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetPriceOk() (*int32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Tier) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *Tier) SetPrice(v int32) {
	o.Price = &v
}

// GetBillingPeriodType returns the BillingPeriodType field value if set, zero value otherwise.
func (o *Tier) GetBillingPeriodType() string {
	if o == nil || o.BillingPeriodType == nil {
		var ret string
		return ret
	}
	return *o.BillingPeriodType
}

// GetBillingPeriodTypeOk returns a tuple with the BillingPeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetBillingPeriodTypeOk() (*string, bool) {
	if o == nil || o.BillingPeriodType == nil {
		return nil, false
	}
	return o.BillingPeriodType, true
}

// HasBillingPeriodType returns a boolean if a field has been set.
func (o *Tier) HasBillingPeriodType() bool {
	if o != nil && o.BillingPeriodType != nil {
		return true
	}

	return false
}

// SetBillingPeriodType gets a reference to the given string and assigns it to the BillingPeriodType field.
func (o *Tier) SetBillingPeriodType(v string) {
	o.BillingPeriodType = &v
}

// GetConsumableFeatures returns the ConsumableFeatures field value if set, zero value otherwise.
func (o *Tier) GetConsumableFeatures() []DefaultConsumableFeature {
	if o == nil || o.ConsumableFeatures == nil {
		var ret []DefaultConsumableFeature
		return ret
	}
	return *o.ConsumableFeatures
}

// GetConsumableFeaturesOk returns a tuple with the ConsumableFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetConsumableFeaturesOk() (*[]DefaultConsumableFeature, bool) {
	if o == nil || o.ConsumableFeatures == nil {
		return nil, false
	}
	return o.ConsumableFeatures, true
}

// HasConsumableFeatures returns a boolean if a field has been set.
func (o *Tier) HasConsumableFeatures() bool {
	if o != nil && o.ConsumableFeatures != nil {
		return true
	}

	return false
}

// SetConsumableFeatures gets a reference to the given []DefaultConsumableFeature and assigns it to the ConsumableFeatures field.
func (o *Tier) SetConsumableFeatures(v []DefaultConsumableFeature) {
	o.ConsumableFeatures = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *Tier) GetSortOrder() int32 {
	if o == nil || o.SortOrder == nil {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetSortOrderOk() (*int32, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *Tier) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *Tier) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetIsSelfService returns the IsSelfService field value if set, zero value otherwise.
func (o *Tier) GetIsSelfService() bool {
	if o == nil || o.IsSelfService == nil {
		var ret bool
		return ret
	}
	return *o.IsSelfService
}

// GetIsSelfServiceOk returns a tuple with the IsSelfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetIsSelfServiceOk() (*bool, bool) {
	if o == nil || o.IsSelfService == nil {
		return nil, false
	}
	return o.IsSelfService, true
}

// HasIsSelfService returns a boolean if a field has been set.
func (o *Tier) HasIsSelfService() bool {
	if o != nil && o.IsSelfService != nil {
		return true
	}

	return false
}

// SetIsSelfService gets a reference to the given bool and assigns it to the IsSelfService field.
func (o *Tier) SetIsSelfService(v bool) {
	o.IsSelfService = &v
}

// GetAccessFeatures returns the AccessFeatures field value if set, zero value otherwise.
func (o *Tier) GetAccessFeatures() []DefaultAccessFeature {
	if o == nil || o.AccessFeatures == nil {
		var ret []DefaultAccessFeature
		return ret
	}
	return *o.AccessFeatures
}

// GetAccessFeaturesOk returns a tuple with the AccessFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetAccessFeaturesOk() (*[]DefaultAccessFeature, bool) {
	if o == nil || o.AccessFeatures == nil {
		return nil, false
	}
	return o.AccessFeatures, true
}

// HasAccessFeatures returns a boolean if a field has been set.
func (o *Tier) HasAccessFeatures() bool {
	if o != nil && o.AccessFeatures != nil {
		return true
	}

	return false
}

// SetAccessFeatures gets a reference to the given []DefaultAccessFeature and assigns it to the AccessFeatures field.
func (o *Tier) SetAccessFeatures(v []DefaultAccessFeature) {
	o.AccessFeatures = &v
}

// GetDisplayIcon returns the DisplayIcon field value if set, zero value otherwise.
func (o *Tier) GetDisplayIcon() string {
	if o == nil || o.DisplayIcon == nil {
		var ret string
		return ret
	}
	return *o.DisplayIcon
}

// GetDisplayIconOk returns a tuple with the DisplayIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetDisplayIconOk() (*string, bool) {
	if o == nil || o.DisplayIcon == nil {
		return nil, false
	}
	return o.DisplayIcon, true
}

// HasDisplayIcon returns a boolean if a field has been set.
func (o *Tier) HasDisplayIcon() bool {
	if o != nil && o.DisplayIcon != nil {
		return true
	}

	return false
}

// SetDisplayIcon gets a reference to the given string and assigns it to the DisplayIcon field.
func (o *Tier) SetDisplayIcon(v string) {
	o.DisplayIcon = &v
}

// GetIsPaid returns the IsPaid field value if set, zero value otherwise.
func (o *Tier) GetIsPaid() bool {
	if o == nil || o.IsPaid == nil {
		var ret bool
		return ret
	}
	return *o.IsPaid
}

// GetIsPaidOk returns a tuple with the IsPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetIsPaidOk() (*bool, bool) {
	if o == nil || o.IsPaid == nil {
		return nil, false
	}
	return o.IsPaid, true
}

// HasIsPaid returns a boolean if a field has been set.
func (o *Tier) HasIsPaid() bool {
	if o != nil && o.IsPaid != nil {
		return true
	}

	return false
}

// SetIsPaid gets a reference to the given bool and assigns it to the IsPaid field.
func (o *Tier) SetIsPaid(v bool) {
	o.IsPaid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Tier) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tier) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Tier) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Tier) SetDescription(v string) {
	o.Description = &v
}

func (o Tier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Family != nil {
		toSerialize["family"] = o.Family
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.BillingPeriodType != nil {
		toSerialize["billing_period_type"] = o.BillingPeriodType
	}
	if o.ConsumableFeatures != nil {
		toSerialize["consumable_features"] = o.ConsumableFeatures
	}
	if o.SortOrder != nil {
		toSerialize["sort_order"] = o.SortOrder
	}
	if o.IsSelfService != nil {
		toSerialize["is_self_service"] = o.IsSelfService
	}
	if o.AccessFeatures != nil {
		toSerialize["access_features"] = o.AccessFeatures
	}
	if o.DisplayIcon != nil {
		toSerialize["display_icon"] = o.DisplayIcon
	}
	if o.IsPaid != nil {
		toSerialize["is_paid"] = o.IsPaid
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableTier struct {
	value *Tier
	isSet bool
}

func (v NullableTier) Get() *Tier {
	return v.value
}

func (v *NullableTier) Set(val *Tier) {
	v.value = val
	v.isSet = true
}

func (v NullableTier) IsSet() bool {
	return v.isSet
}

func (v *NullableTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTier(val *Tier) *NullableTier {
	return &NullableTier{value: val, isSet: true}
}

func (v NullableTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
