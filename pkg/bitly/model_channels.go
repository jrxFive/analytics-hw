/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Channels struct for Channels
type Channels struct {
	Channels *[]Channel `json:"channels,omitempty"`
}

// NewChannels instantiates a new Channels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannels() *Channels {
	this := Channels{}
	return &this
}

// NewChannelsWithDefaults instantiates a new Channels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelsWithDefaults() *Channels {
	this := Channels{}
	return &this
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *Channels) GetChannels() []Channel {
	if o == nil || o.Channels == nil {
		var ret []Channel
		return ret
	}
	return *o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channels) GetChannelsOk() (*[]Channel, bool) {
	if o == nil || o.Channels == nil {
		return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *Channels) HasChannels() bool {
	if o != nil && o.Channels != nil {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []Channel and assigns it to the Channels field.
func (o *Channels) SetChannels(v []Channel) {
	o.Channels = &v
}

func (o Channels) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Channels != nil {
		toSerialize["channels"] = o.Channels
	}
	return json.Marshal(toSerialize)
}

type NullableChannels struct {
	value *Channels
	isSet bool
}

func (v NullableChannels) Get() *Channels {
	return v.value
}

func (v *NullableChannels) Set(val *Channels) {
	v.value = val
	v.isSet = true
}

func (v NullableChannels) IsSet() bool {
	return v.isSet
}

func (v *NullableChannels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannels(val *Channels) *NullableChannels {
	return &NullableChannels{value: val, isSet: true}
}

func (v NullableChannels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
