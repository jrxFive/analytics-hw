/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BitlinkOverrides struct for BitlinkOverrides
type BitlinkOverrides struct {
	References *map[string]string `json:"references,omitempty"`
	Created    *string            `json:"created,omitempty"`
	Rules      *string            `json:"rules,omitempty"`
	GroupGuid  *string            `json:"group_guid,omitempty"`
	Modified   *string            `json:"modified,omitempty"`
	Version    *int32             `json:"version,omitempty"`
	// The fully qualified URL to the Override which is the Bitly link to use. Ex: https://foo.com/bar
	Link *string `json:"link,omitempty"`
	Id   *string `json:"id,omitempty"`
}

// NewBitlinkOverrides instantiates a new BitlinkOverrides object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBitlinkOverrides() *BitlinkOverrides {
	this := BitlinkOverrides{}
	return &this
}

// NewBitlinkOverridesWithDefaults instantiates a new BitlinkOverrides object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBitlinkOverridesWithDefaults() *BitlinkOverrides {
	this := BitlinkOverrides{}
	return &this
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetReferences() map[string]string {
	if o == nil || o.References == nil {
		var ret map[string]string
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetReferencesOk() (*map[string]string, bool) {
	if o == nil || o.References == nil {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasReferences() bool {
	if o != nil && o.References != nil {
		return true
	}

	return false
}

// SetReferences gets a reference to the given map[string]string and assigns it to the References field.
func (o *BitlinkOverrides) SetReferences(v map[string]string) {
	o.References = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *BitlinkOverrides) SetCreated(v string) {
	o.Created = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetRules() string {
	if o == nil || o.Rules == nil {
		var ret string
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetRulesOk() (*string, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given string and assigns it to the Rules field.
func (o *BitlinkOverrides) SetRules(v string) {
	o.Rules = &v
}

// GetGroupGuid returns the GroupGuid field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetGroupGuid() string {
	if o == nil || o.GroupGuid == nil {
		var ret string
		return ret
	}
	return *o.GroupGuid
}

// GetGroupGuidOk returns a tuple with the GroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetGroupGuidOk() (*string, bool) {
	if o == nil || o.GroupGuid == nil {
		return nil, false
	}
	return o.GroupGuid, true
}

// HasGroupGuid returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasGroupGuid() bool {
	if o != nil && o.GroupGuid != nil {
		return true
	}

	return false
}

// SetGroupGuid gets a reference to the given string and assigns it to the GroupGuid field.
func (o *BitlinkOverrides) SetGroupGuid(v string) {
	o.GroupGuid = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetModified() string {
	if o == nil || o.Modified == nil {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetModifiedOk() (*string, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *BitlinkOverrides) SetModified(v string) {
	o.Modified = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *BitlinkOverrides) SetVersion(v int32) {
	o.Version = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *BitlinkOverrides) SetLink(v string) {
	o.Link = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BitlinkOverrides) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BitlinkOverrides) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BitlinkOverrides) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BitlinkOverrides) SetId(v string) {
	o.Id = &v
}

func (o BitlinkOverrides) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.References != nil {
		toSerialize["references"] = o.References
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.GroupGuid != nil {
		toSerialize["group_guid"] = o.GroupGuid
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableBitlinkOverrides struct {
	value *BitlinkOverrides
	isSet bool
}

func (v NullableBitlinkOverrides) Get() *BitlinkOverrides {
	return v.value
}

func (v *NullableBitlinkOverrides) Set(val *BitlinkOverrides) {
	v.value = val
	v.isSet = true
}

func (v NullableBitlinkOverrides) IsSet() bool {
	return v.isSet
}

func (v *NullableBitlinkOverrides) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBitlinkOverrides(val *BitlinkOverrides) *NullableBitlinkOverrides {
	return &NullableBitlinkOverrides{value: val, isSet: true}
}

func (v NullableBitlinkOverrides) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBitlinkOverrides) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
