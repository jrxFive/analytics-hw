/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActivityLogs struct for ActivityLogs
type ActivityLogs struct {
	NextPage *string        `json:"next_page,omitempty"`
	Activity *[]ActivityLog `json:"activity,omitempty"`
}

// NewActivityLogs instantiates a new ActivityLogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityLogs() *ActivityLogs {
	this := ActivityLogs{}
	return &this
}

// NewActivityLogsWithDefaults instantiates a new ActivityLogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityLogsWithDefaults() *ActivityLogs {
	this := ActivityLogs{}
	return &this
}

// GetNextPage returns the NextPage field value if set, zero value otherwise.
func (o *ActivityLogs) GetNextPage() string {
	if o == nil || o.NextPage == nil {
		var ret string
		return ret
	}
	return *o.NextPage
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogs) GetNextPageOk() (*string, bool) {
	if o == nil || o.NextPage == nil {
		return nil, false
	}
	return o.NextPage, true
}

// HasNextPage returns a boolean if a field has been set.
func (o *ActivityLogs) HasNextPage() bool {
	if o != nil && o.NextPage != nil {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given string and assigns it to the NextPage field.
func (o *ActivityLogs) SetNextPage(v string) {
	o.NextPage = &v
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *ActivityLogs) GetActivity() []ActivityLog {
	if o == nil || o.Activity == nil {
		var ret []ActivityLog
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogs) GetActivityOk() (*[]ActivityLog, bool) {
	if o == nil || o.Activity == nil {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *ActivityLogs) HasActivity() bool {
	if o != nil && o.Activity != nil {
		return true
	}

	return false
}

// SetActivity gets a reference to the given []ActivityLog and assigns it to the Activity field.
func (o *ActivityLogs) SetActivity(v []ActivityLog) {
	o.Activity = &v
}

func (o ActivityLogs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NextPage != nil {
		toSerialize["next_page"] = o.NextPage
	}
	if o.Activity != nil {
		toSerialize["activity"] = o.Activity
	}
	return json.Marshal(toSerialize)
}

type NullableActivityLogs struct {
	value *ActivityLogs
	isSet bool
}

func (v NullableActivityLogs) Get() *ActivityLogs {
	return v.value
}

func (v *NullableActivityLogs) Set(val *ActivityLogs) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityLogs) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityLogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityLogs(val *ActivityLogs) *NullableActivityLogs {
	return &NullableActivityLogs{value: val, isSet: true}
}

func (v NullableActivityLogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityLogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
