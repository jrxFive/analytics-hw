/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContactInfo struct for ContactInfo
type ContactInfo struct {
	FirstName string         `json:"first_name"`
	LastName  string         `json:"last_name"`
	Address   BillingAddress `json:"address"`
}

// NewContactInfo instantiates a new ContactInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactInfo(firstName string, lastName string, address BillingAddress) *ContactInfo {
	this := ContactInfo{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Address = address
	return &this
}

// NewContactInfoWithDefaults instantiates a new ContactInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactInfoWithDefaults() *ContactInfo {
	this := ContactInfo{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *ContactInfo) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *ContactInfo) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *ContactInfo) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *ContactInfo) SetLastName(v string) {
	o.LastName = v
}

// GetAddress returns the Address field value
func (o *ContactInfo) GetAddress() BillingAddress {
	if o == nil {
		var ret BillingAddress
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetAddressOk() (*BillingAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ContactInfo) SetAddress(v BillingAddress) {
	o.Address = v
}

func (o ContactInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["first_name"] = o.FirstName
	}
	if true {
		toSerialize["last_name"] = o.LastName
	}
	if true {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableContactInfo struct {
	value *ContactInfo
	isSet bool
}

func (v NullableContactInfo) Get() *ContactInfo {
	return v.value
}

func (v *NullableContactInfo) Set(val *ContactInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableContactInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableContactInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactInfo(val *ContactInfo) *NullableContactInfo {
	return &NullableContactInfo{value: val, isSet: true}
}

func (v NullableContactInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
