/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainAgreement struct for DomainAgreement
type DomainAgreement struct {
	Content      *string `json:"content,omitempty"`
	Url          *string `json:"url,omitempty"`
	AgreementKey *string `json:"agreement_key,omitempty"`
	Title        *string `json:"title,omitempty"`
}

// NewDomainAgreement instantiates a new DomainAgreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainAgreement() *DomainAgreement {
	this := DomainAgreement{}
	return &this
}

// NewDomainAgreementWithDefaults instantiates a new DomainAgreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainAgreementWithDefaults() *DomainAgreement {
	this := DomainAgreement{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *DomainAgreement) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainAgreement) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *DomainAgreement) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *DomainAgreement) SetContent(v string) {
	o.Content = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *DomainAgreement) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainAgreement) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *DomainAgreement) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *DomainAgreement) SetUrl(v string) {
	o.Url = &v
}

// GetAgreementKey returns the AgreementKey field value if set, zero value otherwise.
func (o *DomainAgreement) GetAgreementKey() string {
	if o == nil || o.AgreementKey == nil {
		var ret string
		return ret
	}
	return *o.AgreementKey
}

// GetAgreementKeyOk returns a tuple with the AgreementKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainAgreement) GetAgreementKeyOk() (*string, bool) {
	if o == nil || o.AgreementKey == nil {
		return nil, false
	}
	return o.AgreementKey, true
}

// HasAgreementKey returns a boolean if a field has been set.
func (o *DomainAgreement) HasAgreementKey() bool {
	if o != nil && o.AgreementKey != nil {
		return true
	}

	return false
}

// SetAgreementKey gets a reference to the given string and assigns it to the AgreementKey field.
func (o *DomainAgreement) SetAgreementKey(v string) {
	o.AgreementKey = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DomainAgreement) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainAgreement) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DomainAgreement) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DomainAgreement) SetTitle(v string) {
	o.Title = &v
}

func (o DomainAgreement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.AgreementKey != nil {
		toSerialize["agreement_key"] = o.AgreementKey
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableDomainAgreement struct {
	value *DomainAgreement
	isSet bool
}

func (v NullableDomainAgreement) Get() *DomainAgreement {
	return v.value
}

func (v *NullableDomainAgreement) Set(val *DomainAgreement) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainAgreement(val *DomainAgreement) *NullableDomainAgreement {
	return &NullableDomainAgreement{value: val, isSet: true}
}

func (v NullableDomainAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
