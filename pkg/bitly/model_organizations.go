/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Organizations struct for Organizations
type Organizations struct {
	Organizations []Organization `json:"organizations"`
}

// NewOrganizations instantiates a new Organizations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizations(organizations []Organization) *Organizations {
	this := Organizations{}
	this.Organizations = organizations
	return &this
}

// NewOrganizationsWithDefaults instantiates a new Organizations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsWithDefaults() *Organizations {
	this := Organizations{}
	return &this
}

// GetOrganizations returns the Organizations field value
func (o *Organizations) GetOrganizations() []Organization {
	if o == nil {
		var ret []Organization
		return ret
	}

	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value
// and a boolean to check if the value has been set.
func (o *Organizations) GetOrganizationsOk() (*[]Organization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organizations, true
}

// SetOrganizations sets field value
func (o *Organizations) SetOrganizations(v []Organization) {
	o.Organizations = v
}

func (o Organizations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["organizations"] = o.Organizations
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizations struct {
	value *Organizations
	isSet bool
}

func (v NullableOrganizations) Get() *Organizations {
	return v.value
}

func (v *NullableOrganizations) Set(val *Organizations) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizations) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizations(val *Organizations) *NullableOrganizations {
	return &NullableOrganizations{value: val, isSet: true}
}

func (v NullableOrganizations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
