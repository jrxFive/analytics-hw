/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BulkAddResponseData struct for BulkAddResponseData
type BulkAddResponseData struct {
	LinkSaveFailures       *int32    `json:"link_save_failures,omitempty"`
	KeywordFailures        *int32    `json:"keyword_failures,omitempty"`
	Results                *[]string `json:"results,omitempty"`
	Successes              *int32    `json:"successes,omitempty"`
	ChannelBitlinkFailures *int32    `json:"channel_bitlink_failures,omitempty"`
	CsvFormatFailures      *int32    `json:"csv_format_failures,omitempty"`
}

// NewBulkAddResponseData instantiates a new BulkAddResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkAddResponseData() *BulkAddResponseData {
	this := BulkAddResponseData{}
	return &this
}

// NewBulkAddResponseDataWithDefaults instantiates a new BulkAddResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkAddResponseDataWithDefaults() *BulkAddResponseData {
	this := BulkAddResponseData{}
	return &this
}

// GetLinkSaveFailures returns the LinkSaveFailures field value if set, zero value otherwise.
func (o *BulkAddResponseData) GetLinkSaveFailures() int32 {
	if o == nil || o.LinkSaveFailures == nil {
		var ret int32
		return ret
	}
	return *o.LinkSaveFailures
}

// GetLinkSaveFailuresOk returns a tuple with the LinkSaveFailures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkAddResponseData) GetLinkSaveFailuresOk() (*int32, bool) {
	if o == nil || o.LinkSaveFailures == nil {
		return nil, false
	}
	return o.LinkSaveFailures, true
}

// HasLinkSaveFailures returns a boolean if a field has been set.
func (o *BulkAddResponseData) HasLinkSaveFailures() bool {
	if o != nil && o.LinkSaveFailures != nil {
		return true
	}

	return false
}

// SetLinkSaveFailures gets a reference to the given int32 and assigns it to the LinkSaveFailures field.
func (o *BulkAddResponseData) SetLinkSaveFailures(v int32) {
	o.LinkSaveFailures = &v
}

// GetKeywordFailures returns the KeywordFailures field value if set, zero value otherwise.
func (o *BulkAddResponseData) GetKeywordFailures() int32 {
	if o == nil || o.KeywordFailures == nil {
		var ret int32
		return ret
	}
	return *o.KeywordFailures
}

// GetKeywordFailuresOk returns a tuple with the KeywordFailures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkAddResponseData) GetKeywordFailuresOk() (*int32, bool) {
	if o == nil || o.KeywordFailures == nil {
		return nil, false
	}
	return o.KeywordFailures, true
}

// HasKeywordFailures returns a boolean if a field has been set.
func (o *BulkAddResponseData) HasKeywordFailures() bool {
	if o != nil && o.KeywordFailures != nil {
		return true
	}

	return false
}

// SetKeywordFailures gets a reference to the given int32 and assigns it to the KeywordFailures field.
func (o *BulkAddResponseData) SetKeywordFailures(v int32) {
	o.KeywordFailures = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *BulkAddResponseData) GetResults() []string {
	if o == nil || o.Results == nil {
		var ret []string
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkAddResponseData) GetResultsOk() (*[]string, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *BulkAddResponseData) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []string and assigns it to the Results field.
func (o *BulkAddResponseData) SetResults(v []string) {
	o.Results = &v
}

// GetSuccesses returns the Successes field value if set, zero value otherwise.
func (o *BulkAddResponseData) GetSuccesses() int32 {
	if o == nil || o.Successes == nil {
		var ret int32
		return ret
	}
	return *o.Successes
}

// GetSuccessesOk returns a tuple with the Successes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkAddResponseData) GetSuccessesOk() (*int32, bool) {
	if o == nil || o.Successes == nil {
		return nil, false
	}
	return o.Successes, true
}

// HasSuccesses returns a boolean if a field has been set.
func (o *BulkAddResponseData) HasSuccesses() bool {
	if o != nil && o.Successes != nil {
		return true
	}

	return false
}

// SetSuccesses gets a reference to the given int32 and assigns it to the Successes field.
func (o *BulkAddResponseData) SetSuccesses(v int32) {
	o.Successes = &v
}

// GetChannelBitlinkFailures returns the ChannelBitlinkFailures field value if set, zero value otherwise.
func (o *BulkAddResponseData) GetChannelBitlinkFailures() int32 {
	if o == nil || o.ChannelBitlinkFailures == nil {
		var ret int32
		return ret
	}
	return *o.ChannelBitlinkFailures
}

// GetChannelBitlinkFailuresOk returns a tuple with the ChannelBitlinkFailures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkAddResponseData) GetChannelBitlinkFailuresOk() (*int32, bool) {
	if o == nil || o.ChannelBitlinkFailures == nil {
		return nil, false
	}
	return o.ChannelBitlinkFailures, true
}

// HasChannelBitlinkFailures returns a boolean if a field has been set.
func (o *BulkAddResponseData) HasChannelBitlinkFailures() bool {
	if o != nil && o.ChannelBitlinkFailures != nil {
		return true
	}

	return false
}

// SetChannelBitlinkFailures gets a reference to the given int32 and assigns it to the ChannelBitlinkFailures field.
func (o *BulkAddResponseData) SetChannelBitlinkFailures(v int32) {
	o.ChannelBitlinkFailures = &v
}

// GetCsvFormatFailures returns the CsvFormatFailures field value if set, zero value otherwise.
func (o *BulkAddResponseData) GetCsvFormatFailures() int32 {
	if o == nil || o.CsvFormatFailures == nil {
		var ret int32
		return ret
	}
	return *o.CsvFormatFailures
}

// GetCsvFormatFailuresOk returns a tuple with the CsvFormatFailures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkAddResponseData) GetCsvFormatFailuresOk() (*int32, bool) {
	if o == nil || o.CsvFormatFailures == nil {
		return nil, false
	}
	return o.CsvFormatFailures, true
}

// HasCsvFormatFailures returns a boolean if a field has been set.
func (o *BulkAddResponseData) HasCsvFormatFailures() bool {
	if o != nil && o.CsvFormatFailures != nil {
		return true
	}

	return false
}

// SetCsvFormatFailures gets a reference to the given int32 and assigns it to the CsvFormatFailures field.
func (o *BulkAddResponseData) SetCsvFormatFailures(v int32) {
	o.CsvFormatFailures = &v
}

func (o BulkAddResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkSaveFailures != nil {
		toSerialize["link_save_failures"] = o.LinkSaveFailures
	}
	if o.KeywordFailures != nil {
		toSerialize["keyword_failures"] = o.KeywordFailures
	}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	if o.Successes != nil {
		toSerialize["successes"] = o.Successes
	}
	if o.ChannelBitlinkFailures != nil {
		toSerialize["channel_bitlink_failures"] = o.ChannelBitlinkFailures
	}
	if o.CsvFormatFailures != nil {
		toSerialize["csv_format_failures"] = o.CsvFormatFailures
	}
	return json.Marshal(toSerialize)
}

type NullableBulkAddResponseData struct {
	value *BulkAddResponseData
	isSet bool
}

func (v NullableBulkAddResponseData) Get() *BulkAddResponseData {
	return v.value
}

func (v *NullableBulkAddResponseData) Set(val *BulkAddResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkAddResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkAddResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkAddResponseData(val *BulkAddResponseData) *NullableBulkAddResponseData {
	return &NullableBulkAddResponseData{value: val, isSet: true}
}

func (v NullableBulkAddResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkAddResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
