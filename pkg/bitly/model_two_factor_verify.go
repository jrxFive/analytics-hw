/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TwoFactorVerify struct for TwoFactorVerify
type TwoFactorVerify struct {
	IsValid   bool `json:"is_valid"`
	IsExpired bool `json:"is_expired"`
}

// NewTwoFactorVerify instantiates a new TwoFactorVerify object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwoFactorVerify(isValid bool, isExpired bool) *TwoFactorVerify {
	this := TwoFactorVerify{}
	this.IsValid = isValid
	this.IsExpired = isExpired
	return &this
}

// NewTwoFactorVerifyWithDefaults instantiates a new TwoFactorVerify object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwoFactorVerifyWithDefaults() *TwoFactorVerify {
	this := TwoFactorVerify{}
	return &this
}

// GetIsValid returns the IsValid field value
func (o *TwoFactorVerify) GetIsValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsValid
}

// GetIsValidOk returns a tuple with the IsValid field value
// and a boolean to check if the value has been set.
func (o *TwoFactorVerify) GetIsValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsValid, true
}

// SetIsValid sets field value
func (o *TwoFactorVerify) SetIsValid(v bool) {
	o.IsValid = v
}

// GetIsExpired returns the IsExpired field value
func (o *TwoFactorVerify) GetIsExpired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsExpired
}

// GetIsExpiredOk returns a tuple with the IsExpired field value
// and a boolean to check if the value has been set.
func (o *TwoFactorVerify) GetIsExpiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsExpired, true
}

// SetIsExpired sets field value
func (o *TwoFactorVerify) SetIsExpired(v bool) {
	o.IsExpired = v
}

func (o TwoFactorVerify) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["is_valid"] = o.IsValid
	}
	if true {
		toSerialize["is_expired"] = o.IsExpired
	}
	return json.Marshal(toSerialize)
}

type NullableTwoFactorVerify struct {
	value *TwoFactorVerify
	isSet bool
}

func (v NullableTwoFactorVerify) Get() *TwoFactorVerify {
	return v.value
}

func (v *NullableTwoFactorVerify) Set(val *TwoFactorVerify) {
	v.value = val
	v.isSet = true
}

func (v NullableTwoFactorVerify) IsSet() bool {
	return v.isSet
}

func (v *NullableTwoFactorVerify) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwoFactorVerify(val *TwoFactorVerify) *NullableTwoFactorVerify {
	return &NullableTwoFactorVerify{value: val, isSet: true}
}

func (v NullableTwoFactorVerify) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwoFactorVerify) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
