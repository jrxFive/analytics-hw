/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EncodingLogin struct for EncodingLogin
type EncodingLogin struct {
	EncodingLogin *[]string `json:"encoding_login,omitempty"`
}

// NewEncodingLogin instantiates a new EncodingLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEncodingLogin() *EncodingLogin {
	this := EncodingLogin{}
	return &this
}

// NewEncodingLoginWithDefaults instantiates a new EncodingLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEncodingLoginWithDefaults() *EncodingLogin {
	this := EncodingLogin{}
	return &this
}

// GetEncodingLogin returns the EncodingLogin field value if set, zero value otherwise.
func (o *EncodingLogin) GetEncodingLogin() []string {
	if o == nil || o.EncodingLogin == nil {
		var ret []string
		return ret
	}
	return *o.EncodingLogin
}

// GetEncodingLoginOk returns a tuple with the EncodingLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncodingLogin) GetEncodingLoginOk() (*[]string, bool) {
	if o == nil || o.EncodingLogin == nil {
		return nil, false
	}
	return o.EncodingLogin, true
}

// HasEncodingLogin returns a boolean if a field has been set.
func (o *EncodingLogin) HasEncodingLogin() bool {
	if o != nil && o.EncodingLogin != nil {
		return true
	}

	return false
}

// SetEncodingLogin gets a reference to the given []string and assigns it to the EncodingLogin field.
func (o *EncodingLogin) SetEncodingLogin(v []string) {
	o.EncodingLogin = &v
}

func (o EncodingLogin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EncodingLogin != nil {
		toSerialize["encoding_login"] = o.EncodingLogin
	}
	return json.Marshal(toSerialize)
}

type NullableEncodingLogin struct {
	value *EncodingLogin
	isSet bool
}

func (v NullableEncodingLogin) Get() *EncodingLogin {
	return v.value
}

func (v *NullableEncodingLogin) Set(val *EncodingLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableEncodingLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableEncodingLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEncodingLogin(val *EncodingLogin) *NullableEncodingLogin {
	return &NullableEncodingLogin{value: val, isSet: true}
}

func (v NullableEncodingLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEncodingLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
