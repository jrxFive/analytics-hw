/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TwoFactor struct for TwoFactor
type TwoFactor struct {
	PhoneNumber string  `json:"phone_number"`
	Status      *string `json:"status,omitempty"`
	CountryCode string  `json:"country_code"`
}

// NewTwoFactor instantiates a new TwoFactor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwoFactor(phoneNumber string, countryCode string) *TwoFactor {
	this := TwoFactor{}
	this.PhoneNumber = phoneNumber
	this.CountryCode = countryCode
	return &this
}

// NewTwoFactorWithDefaults instantiates a new TwoFactor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwoFactorWithDefaults() *TwoFactor {
	this := TwoFactor{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *TwoFactor) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *TwoFactor) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *TwoFactor) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TwoFactor) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwoFactor) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TwoFactor) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TwoFactor) SetStatus(v string) {
	o.Status = &v
}

// GetCountryCode returns the CountryCode field value
func (o *TwoFactor) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *TwoFactor) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *TwoFactor) SetCountryCode(v string) {
	o.CountryCode = v
}

func (o TwoFactor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["country_code"] = o.CountryCode
	}
	return json.Marshal(toSerialize)
}

type NullableTwoFactor struct {
	value *TwoFactor
	isSet bool
}

func (v NullableTwoFactor) Get() *TwoFactor {
	return v.value
}

func (v *NullableTwoFactor) Set(val *TwoFactor) {
	v.value = val
	v.isSet = true
}

func (v NullableTwoFactor) IsSet() bool {
	return v.isSet
}

func (v *NullableTwoFactor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwoFactor(val *TwoFactor) *NullableTwoFactor {
	return &NullableTwoFactor{value: val, isSet: true}
}

func (v NullableTwoFactor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwoFactor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
