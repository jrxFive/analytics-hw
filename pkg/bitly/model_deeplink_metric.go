/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeeplinkMetric struct for DeeplinkMetric
type DeeplinkMetric struct {
	AppInstalls      *int32 `json:"app_installs,omitempty"`
	StoreVisits      *int32 `json:"store_visits,omitempty"`
	InterstitalViews *int32 `json:"interstital_views,omitempty"`
	AppOpens         *int32 `json:"app_opens,omitempty"`
	WebOpens         *int32 `json:"web_opens,omitempty"`
}

// NewDeeplinkMetric instantiates a new DeeplinkMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeeplinkMetric() *DeeplinkMetric {
	this := DeeplinkMetric{}
	return &this
}

// NewDeeplinkMetricWithDefaults instantiates a new DeeplinkMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeeplinkMetricWithDefaults() *DeeplinkMetric {
	this := DeeplinkMetric{}
	return &this
}

// GetAppInstalls returns the AppInstalls field value if set, zero value otherwise.
func (o *DeeplinkMetric) GetAppInstalls() int32 {
	if o == nil || o.AppInstalls == nil {
		var ret int32
		return ret
	}
	return *o.AppInstalls
}

// GetAppInstallsOk returns a tuple with the AppInstalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkMetric) GetAppInstallsOk() (*int32, bool) {
	if o == nil || o.AppInstalls == nil {
		return nil, false
	}
	return o.AppInstalls, true
}

// HasAppInstalls returns a boolean if a field has been set.
func (o *DeeplinkMetric) HasAppInstalls() bool {
	if o != nil && o.AppInstalls != nil {
		return true
	}

	return false
}

// SetAppInstalls gets a reference to the given int32 and assigns it to the AppInstalls field.
func (o *DeeplinkMetric) SetAppInstalls(v int32) {
	o.AppInstalls = &v
}

// GetStoreVisits returns the StoreVisits field value if set, zero value otherwise.
func (o *DeeplinkMetric) GetStoreVisits() int32 {
	if o == nil || o.StoreVisits == nil {
		var ret int32
		return ret
	}
	return *o.StoreVisits
}

// GetStoreVisitsOk returns a tuple with the StoreVisits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkMetric) GetStoreVisitsOk() (*int32, bool) {
	if o == nil || o.StoreVisits == nil {
		return nil, false
	}
	return o.StoreVisits, true
}

// HasStoreVisits returns a boolean if a field has been set.
func (o *DeeplinkMetric) HasStoreVisits() bool {
	if o != nil && o.StoreVisits != nil {
		return true
	}

	return false
}

// SetStoreVisits gets a reference to the given int32 and assigns it to the StoreVisits field.
func (o *DeeplinkMetric) SetStoreVisits(v int32) {
	o.StoreVisits = &v
}

// GetInterstitalViews returns the InterstitalViews field value if set, zero value otherwise.
func (o *DeeplinkMetric) GetInterstitalViews() int32 {
	if o == nil || o.InterstitalViews == nil {
		var ret int32
		return ret
	}
	return *o.InterstitalViews
}

// GetInterstitalViewsOk returns a tuple with the InterstitalViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkMetric) GetInterstitalViewsOk() (*int32, bool) {
	if o == nil || o.InterstitalViews == nil {
		return nil, false
	}
	return o.InterstitalViews, true
}

// HasInterstitalViews returns a boolean if a field has been set.
func (o *DeeplinkMetric) HasInterstitalViews() bool {
	if o != nil && o.InterstitalViews != nil {
		return true
	}

	return false
}

// SetInterstitalViews gets a reference to the given int32 and assigns it to the InterstitalViews field.
func (o *DeeplinkMetric) SetInterstitalViews(v int32) {
	o.InterstitalViews = &v
}

// GetAppOpens returns the AppOpens field value if set, zero value otherwise.
func (o *DeeplinkMetric) GetAppOpens() int32 {
	if o == nil || o.AppOpens == nil {
		var ret int32
		return ret
	}
	return *o.AppOpens
}

// GetAppOpensOk returns a tuple with the AppOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkMetric) GetAppOpensOk() (*int32, bool) {
	if o == nil || o.AppOpens == nil {
		return nil, false
	}
	return o.AppOpens, true
}

// HasAppOpens returns a boolean if a field has been set.
func (o *DeeplinkMetric) HasAppOpens() bool {
	if o != nil && o.AppOpens != nil {
		return true
	}

	return false
}

// SetAppOpens gets a reference to the given int32 and assigns it to the AppOpens field.
func (o *DeeplinkMetric) SetAppOpens(v int32) {
	o.AppOpens = &v
}

// GetWebOpens returns the WebOpens field value if set, zero value otherwise.
func (o *DeeplinkMetric) GetWebOpens() int32 {
	if o == nil || o.WebOpens == nil {
		var ret int32
		return ret
	}
	return *o.WebOpens
}

// GetWebOpensOk returns a tuple with the WebOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkMetric) GetWebOpensOk() (*int32, bool) {
	if o == nil || o.WebOpens == nil {
		return nil, false
	}
	return o.WebOpens, true
}

// HasWebOpens returns a boolean if a field has been set.
func (o *DeeplinkMetric) HasWebOpens() bool {
	if o != nil && o.WebOpens != nil {
		return true
	}

	return false
}

// SetWebOpens gets a reference to the given int32 and assigns it to the WebOpens field.
func (o *DeeplinkMetric) SetWebOpens(v int32) {
	o.WebOpens = &v
}

func (o DeeplinkMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppInstalls != nil {
		toSerialize["app_installs"] = o.AppInstalls
	}
	if o.StoreVisits != nil {
		toSerialize["store_visits"] = o.StoreVisits
	}
	if o.InterstitalViews != nil {
		toSerialize["interstital_views"] = o.InterstitalViews
	}
	if o.AppOpens != nil {
		toSerialize["app_opens"] = o.AppOpens
	}
	if o.WebOpens != nil {
		toSerialize["web_opens"] = o.WebOpens
	}
	return json.Marshal(toSerialize)
}

type NullableDeeplinkMetric struct {
	value *DeeplinkMetric
	isSet bool
}

func (v NullableDeeplinkMetric) Get() *DeeplinkMetric {
	return v.value
}

func (v *NullableDeeplinkMetric) Set(val *DeeplinkMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableDeeplinkMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableDeeplinkMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeeplinkMetric(val *DeeplinkMetric) *NullableDeeplinkMetric {
	return &NullableDeeplinkMetric{value: val, isSet: true}
}

func (v NullableDeeplinkMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeeplinkMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
