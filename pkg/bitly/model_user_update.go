/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserUpdate struct for UserUpdate
type UserUpdate struct {
	DefaultGroupGuid *string `json:"default_group_guid,omitempty"`
	Name             *string `json:"name,omitempty"`
}

// NewUserUpdate instantiates a new UserUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserUpdate() *UserUpdate {
	this := UserUpdate{}
	return &this
}

// NewUserUpdateWithDefaults instantiates a new UserUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserUpdateWithDefaults() *UserUpdate {
	this := UserUpdate{}
	return &this
}

// GetDefaultGroupGuid returns the DefaultGroupGuid field value if set, zero value otherwise.
func (o *UserUpdate) GetDefaultGroupGuid() string {
	if o == nil || o.DefaultGroupGuid == nil {
		var ret string
		return ret
	}
	return *o.DefaultGroupGuid
}

// GetDefaultGroupGuidOk returns a tuple with the DefaultGroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdate) GetDefaultGroupGuidOk() (*string, bool) {
	if o == nil || o.DefaultGroupGuid == nil {
		return nil, false
	}
	return o.DefaultGroupGuid, true
}

// HasDefaultGroupGuid returns a boolean if a field has been set.
func (o *UserUpdate) HasDefaultGroupGuid() bool {
	if o != nil && o.DefaultGroupGuid != nil {
		return true
	}

	return false
}

// SetDefaultGroupGuid gets a reference to the given string and assigns it to the DefaultGroupGuid field.
func (o *UserUpdate) SetDefaultGroupGuid(v string) {
	o.DefaultGroupGuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserUpdate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserUpdate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserUpdate) SetName(v string) {
	o.Name = &v
}

func (o UserUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultGroupGuid != nil {
		toSerialize["default_group_guid"] = o.DefaultGroupGuid
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUserUpdate struct {
	value *UserUpdate
	isSet bool
}

func (v NullableUserUpdate) Get() *UserUpdate {
	return v.value
}

func (v *NullableUserUpdate) Set(val *UserUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUpdate(val *UserUpdate) *NullableUserUpdate {
	return &NullableUserUpdate{value: val, isSet: true}
}

func (v NullableUserUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
