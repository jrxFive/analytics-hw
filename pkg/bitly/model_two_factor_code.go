/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TwoFactorCode struct for TwoFactorCode
type TwoFactorCode struct {
	Code string `json:"code"`
}

// NewTwoFactorCode instantiates a new TwoFactorCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwoFactorCode(code string) *TwoFactorCode {
	this := TwoFactorCode{}
	this.Code = code
	return &this
}

// NewTwoFactorCodeWithDefaults instantiates a new TwoFactorCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwoFactorCodeWithDefaults() *TwoFactorCode {
	this := TwoFactorCode{}
	return &this
}

// GetCode returns the Code field value
func (o *TwoFactorCode) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *TwoFactorCode) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *TwoFactorCode) SetCode(v string) {
	o.Code = v
}

func (o TwoFactorCode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableTwoFactorCode struct {
	value *TwoFactorCode
	isSet bool
}

func (v NullableTwoFactorCode) Get() *TwoFactorCode {
	return v.value
}

func (v *NullableTwoFactorCode) Set(val *TwoFactorCode) {
	v.value = val
	v.isSet = true
}

func (v NullableTwoFactorCode) IsSet() bool {
	return v.isSet
}

func (v *NullableTwoFactorCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwoFactorCode(val *TwoFactorCode) *NullableTwoFactorCode {
	return &NullableTwoFactorCode{value: val, isSet: true}
}

func (v NullableTwoFactorCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwoFactorCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
