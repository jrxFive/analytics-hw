/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BillingAccount struct for BillingAccount
type BillingAccount struct {
	LastFourDigits    *string      `json:"last_four_digits,omitempty"`
	SubscriptionPrice *float32     `json:"subscription_price,omitempty"`
	BillingInfo       *BillingInfo `json:"billing_info,omitempty"`
	AccountId         *string      `json:"account_id,omitempty"`
	// ISO timestamp
	EndDate            *string      `json:"end_date,omitempty"`
	ContactInfo        *ContactInfo `json:"contact_info,omitempty"`
	AccountNum         *string      `json:"account_num,omitempty"`
	CardType           *string      `json:"card_type,omitempty"`
	SubscriptionStatus *string      `json:"subscription_status,omitempty"`
	// ISO timestamp
	RenewalDate *string `json:"renewal_date,omitempty"`
}

// NewBillingAccount instantiates a new BillingAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingAccount() *BillingAccount {
	this := BillingAccount{}
	return &this
}

// NewBillingAccountWithDefaults instantiates a new BillingAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingAccountWithDefaults() *BillingAccount {
	this := BillingAccount{}
	return &this
}

// GetLastFourDigits returns the LastFourDigits field value if set, zero value otherwise.
func (o *BillingAccount) GetLastFourDigits() string {
	if o == nil || o.LastFourDigits == nil {
		var ret string
		return ret
	}
	return *o.LastFourDigits
}

// GetLastFourDigitsOk returns a tuple with the LastFourDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetLastFourDigitsOk() (*string, bool) {
	if o == nil || o.LastFourDigits == nil {
		return nil, false
	}
	return o.LastFourDigits, true
}

// HasLastFourDigits returns a boolean if a field has been set.
func (o *BillingAccount) HasLastFourDigits() bool {
	if o != nil && o.LastFourDigits != nil {
		return true
	}

	return false
}

// SetLastFourDigits gets a reference to the given string and assigns it to the LastFourDigits field.
func (o *BillingAccount) SetLastFourDigits(v string) {
	o.LastFourDigits = &v
}

// GetSubscriptionPrice returns the SubscriptionPrice field value if set, zero value otherwise.
func (o *BillingAccount) GetSubscriptionPrice() float32 {
	if o == nil || o.SubscriptionPrice == nil {
		var ret float32
		return ret
	}
	return *o.SubscriptionPrice
}

// GetSubscriptionPriceOk returns a tuple with the SubscriptionPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetSubscriptionPriceOk() (*float32, bool) {
	if o == nil || o.SubscriptionPrice == nil {
		return nil, false
	}
	return o.SubscriptionPrice, true
}

// HasSubscriptionPrice returns a boolean if a field has been set.
func (o *BillingAccount) HasSubscriptionPrice() bool {
	if o != nil && o.SubscriptionPrice != nil {
		return true
	}

	return false
}

// SetSubscriptionPrice gets a reference to the given float32 and assigns it to the SubscriptionPrice field.
func (o *BillingAccount) SetSubscriptionPrice(v float32) {
	o.SubscriptionPrice = &v
}

// GetBillingInfo returns the BillingInfo field value if set, zero value otherwise.
func (o *BillingAccount) GetBillingInfo() BillingInfo {
	if o == nil || o.BillingInfo == nil {
		var ret BillingInfo
		return ret
	}
	return *o.BillingInfo
}

// GetBillingInfoOk returns a tuple with the BillingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetBillingInfoOk() (*BillingInfo, bool) {
	if o == nil || o.BillingInfo == nil {
		return nil, false
	}
	return o.BillingInfo, true
}

// HasBillingInfo returns a boolean if a field has been set.
func (o *BillingAccount) HasBillingInfo() bool {
	if o != nil && o.BillingInfo != nil {
		return true
	}

	return false
}

// SetBillingInfo gets a reference to the given BillingInfo and assigns it to the BillingInfo field.
func (o *BillingAccount) SetBillingInfo(v BillingInfo) {
	o.BillingInfo = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *BillingAccount) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *BillingAccount) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *BillingAccount) SetAccountId(v string) {
	o.AccountId = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *BillingAccount) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *BillingAccount) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *BillingAccount) SetEndDate(v string) {
	o.EndDate = &v
}

// GetContactInfo returns the ContactInfo field value if set, zero value otherwise.
func (o *BillingAccount) GetContactInfo() ContactInfo {
	if o == nil || o.ContactInfo == nil {
		var ret ContactInfo
		return ret
	}
	return *o.ContactInfo
}

// GetContactInfoOk returns a tuple with the ContactInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetContactInfoOk() (*ContactInfo, bool) {
	if o == nil || o.ContactInfo == nil {
		return nil, false
	}
	return o.ContactInfo, true
}

// HasContactInfo returns a boolean if a field has been set.
func (o *BillingAccount) HasContactInfo() bool {
	if o != nil && o.ContactInfo != nil {
		return true
	}

	return false
}

// SetContactInfo gets a reference to the given ContactInfo and assigns it to the ContactInfo field.
func (o *BillingAccount) SetContactInfo(v ContactInfo) {
	o.ContactInfo = &v
}

// GetAccountNum returns the AccountNum field value if set, zero value otherwise.
func (o *BillingAccount) GetAccountNum() string {
	if o == nil || o.AccountNum == nil {
		var ret string
		return ret
	}
	return *o.AccountNum
}

// GetAccountNumOk returns a tuple with the AccountNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetAccountNumOk() (*string, bool) {
	if o == nil || o.AccountNum == nil {
		return nil, false
	}
	return o.AccountNum, true
}

// HasAccountNum returns a boolean if a field has been set.
func (o *BillingAccount) HasAccountNum() bool {
	if o != nil && o.AccountNum != nil {
		return true
	}

	return false
}

// SetAccountNum gets a reference to the given string and assigns it to the AccountNum field.
func (o *BillingAccount) SetAccountNum(v string) {
	o.AccountNum = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *BillingAccount) GetCardType() string {
	if o == nil || o.CardType == nil {
		var ret string
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetCardTypeOk() (*string, bool) {
	if o == nil || o.CardType == nil {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *BillingAccount) HasCardType() bool {
	if o != nil && o.CardType != nil {
		return true
	}

	return false
}

// SetCardType gets a reference to the given string and assigns it to the CardType field.
func (o *BillingAccount) SetCardType(v string) {
	o.CardType = &v
}

// GetSubscriptionStatus returns the SubscriptionStatus field value if set, zero value otherwise.
func (o *BillingAccount) GetSubscriptionStatus() string {
	if o == nil || o.SubscriptionStatus == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionStatus
}

// GetSubscriptionStatusOk returns a tuple with the SubscriptionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetSubscriptionStatusOk() (*string, bool) {
	if o == nil || o.SubscriptionStatus == nil {
		return nil, false
	}
	return o.SubscriptionStatus, true
}

// HasSubscriptionStatus returns a boolean if a field has been set.
func (o *BillingAccount) HasSubscriptionStatus() bool {
	if o != nil && o.SubscriptionStatus != nil {
		return true
	}

	return false
}

// SetSubscriptionStatus gets a reference to the given string and assigns it to the SubscriptionStatus field.
func (o *BillingAccount) SetSubscriptionStatus(v string) {
	o.SubscriptionStatus = &v
}

// GetRenewalDate returns the RenewalDate field value if set, zero value otherwise.
func (o *BillingAccount) GetRenewalDate() string {
	if o == nil || o.RenewalDate == nil {
		var ret string
		return ret
	}
	return *o.RenewalDate
}

// GetRenewalDateOk returns a tuple with the RenewalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetRenewalDateOk() (*string, bool) {
	if o == nil || o.RenewalDate == nil {
		return nil, false
	}
	return o.RenewalDate, true
}

// HasRenewalDate returns a boolean if a field has been set.
func (o *BillingAccount) HasRenewalDate() bool {
	if o != nil && o.RenewalDate != nil {
		return true
	}

	return false
}

// SetRenewalDate gets a reference to the given string and assigns it to the RenewalDate field.
func (o *BillingAccount) SetRenewalDate(v string) {
	o.RenewalDate = &v
}

func (o BillingAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastFourDigits != nil {
		toSerialize["last_four_digits"] = o.LastFourDigits
	}
	if o.SubscriptionPrice != nil {
		toSerialize["subscription_price"] = o.SubscriptionPrice
	}
	if o.BillingInfo != nil {
		toSerialize["billing_info"] = o.BillingInfo
	}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.EndDate != nil {
		toSerialize["end_date"] = o.EndDate
	}
	if o.ContactInfo != nil {
		toSerialize["contact_info"] = o.ContactInfo
	}
	if o.AccountNum != nil {
		toSerialize["account_num"] = o.AccountNum
	}
	if o.CardType != nil {
		toSerialize["card_type"] = o.CardType
	}
	if o.SubscriptionStatus != nil {
		toSerialize["subscription_status"] = o.SubscriptionStatus
	}
	if o.RenewalDate != nil {
		toSerialize["renewal_date"] = o.RenewalDate
	}
	return json.Marshal(toSerialize)
}

type NullableBillingAccount struct {
	value *BillingAccount
	isSet bool
}

func (v NullableBillingAccount) Get() *BillingAccount {
	return v.value
}

func (v *NullableBillingAccount) Set(val *BillingAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingAccount(val *BillingAccount) *NullableBillingAccount {
	return &NullableBillingAccount{value: val, isSet: true}
}

func (v NullableBillingAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
