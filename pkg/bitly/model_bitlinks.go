/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Bitlinks struct for Bitlinks
type Bitlinks struct {
	Pagination *Pagination    `json:"pagination,omitempty"`
	Links      *[]BitlinkBody `json:"links,omitempty"`
}

// NewBitlinks instantiates a new Bitlinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBitlinks() *Bitlinks {
	this := Bitlinks{}
	return &this
}

// NewBitlinksWithDefaults instantiates a new Bitlinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBitlinksWithDefaults() *Bitlinks {
	this := Bitlinks{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *Bitlinks) GetPagination() Pagination {
	if o == nil || o.Pagination == nil {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bitlinks) GetPaginationOk() (*Pagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *Bitlinks) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *Bitlinks) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Bitlinks) GetLinks() []BitlinkBody {
	if o == nil || o.Links == nil {
		var ret []BitlinkBody
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bitlinks) GetLinksOk() (*[]BitlinkBody, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Bitlinks) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []BitlinkBody and assigns it to the Links field.
func (o *Bitlinks) SetLinks(v []BitlinkBody) {
	o.Links = &v
}

func (o Bitlinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableBitlinks struct {
	value *Bitlinks
	isSet bool
}

func (v NullableBitlinks) Get() *Bitlinks {
	return v.value
}

func (v *NullableBitlinks) Set(val *Bitlinks) {
	v.value = val
	v.isSet = true
}

func (v NullableBitlinks) IsSet() bool {
	return v.isSet
}

func (v *NullableBitlinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBitlinks(val *Bitlinks) *NullableBitlinks {
	return &NullableBitlinks{value: val, isSet: true}
}

func (v NullableBitlinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBitlinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
