/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Event struct for Event
type Event struct {
	UiAction     string  `json:"ui_action"`
	Referrer     *string `json:"referrer,omitempty"`
	Action       string  `json:"action"`
	InitiatedBy  string  `json:"initiated_by"`
	GroupGuid    *string `json:"group_guid,omitempty"`
	UiActionDate string  `json:"ui_action_date"`
	Login        string  `json:"login"`
	OrgGuid      string  `json:"org_guid"`
}

// NewEvent instantiates a new Event object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvent(uiAction string, action string, initiatedBy string, uiActionDate string, login string, orgGuid string) *Event {
	this := Event{}
	this.UiAction = uiAction
	this.Action = action
	this.InitiatedBy = initiatedBy
	this.UiActionDate = uiActionDate
	this.Login = login
	this.OrgGuid = orgGuid
	return &this
}

// NewEventWithDefaults instantiates a new Event object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventWithDefaults() *Event {
	this := Event{}
	return &this
}

// GetUiAction returns the UiAction field value
func (o *Event) GetUiAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UiAction
}

// GetUiActionOk returns a tuple with the UiAction field value
// and a boolean to check if the value has been set.
func (o *Event) GetUiActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UiAction, true
}

// SetUiAction sets field value
func (o *Event) SetUiAction(v string) {
	o.UiAction = v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *Event) GetReferrer() string {
	if o == nil || o.Referrer == nil {
		var ret string
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetReferrerOk() (*string, bool) {
	if o == nil || o.Referrer == nil {
		return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *Event) HasReferrer() bool {
	if o != nil && o.Referrer != nil {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given string and assigns it to the Referrer field.
func (o *Event) SetReferrer(v string) {
	o.Referrer = &v
}

// GetAction returns the Action field value
func (o *Event) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *Event) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *Event) SetAction(v string) {
	o.Action = v
}

// GetInitiatedBy returns the InitiatedBy field value
func (o *Event) GetInitiatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InitiatedBy
}

// GetInitiatedByOk returns a tuple with the InitiatedBy field value
// and a boolean to check if the value has been set.
func (o *Event) GetInitiatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitiatedBy, true
}

// SetInitiatedBy sets field value
func (o *Event) SetInitiatedBy(v string) {
	o.InitiatedBy = v
}

// GetGroupGuid returns the GroupGuid field value if set, zero value otherwise.
func (o *Event) GetGroupGuid() string {
	if o == nil || o.GroupGuid == nil {
		var ret string
		return ret
	}
	return *o.GroupGuid
}

// GetGroupGuidOk returns a tuple with the GroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetGroupGuidOk() (*string, bool) {
	if o == nil || o.GroupGuid == nil {
		return nil, false
	}
	return o.GroupGuid, true
}

// HasGroupGuid returns a boolean if a field has been set.
func (o *Event) HasGroupGuid() bool {
	if o != nil && o.GroupGuid != nil {
		return true
	}

	return false
}

// SetGroupGuid gets a reference to the given string and assigns it to the GroupGuid field.
func (o *Event) SetGroupGuid(v string) {
	o.GroupGuid = &v
}

// GetUiActionDate returns the UiActionDate field value
func (o *Event) GetUiActionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UiActionDate
}

// GetUiActionDateOk returns a tuple with the UiActionDate field value
// and a boolean to check if the value has been set.
func (o *Event) GetUiActionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UiActionDate, true
}

// SetUiActionDate sets field value
func (o *Event) SetUiActionDate(v string) {
	o.UiActionDate = v
}

// GetLogin returns the Login field value
func (o *Event) GetLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *Event) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *Event) SetLogin(v string) {
	o.Login = v
}

// GetOrgGuid returns the OrgGuid field value
func (o *Event) GetOrgGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgGuid
}

// GetOrgGuidOk returns a tuple with the OrgGuid field value
// and a boolean to check if the value has been set.
func (o *Event) GetOrgGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgGuid, true
}

// SetOrgGuid sets field value
func (o *Event) SetOrgGuid(v string) {
	o.OrgGuid = v
}

func (o Event) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ui_action"] = o.UiAction
	}
	if o.Referrer != nil {
		toSerialize["referrer"] = o.Referrer
	}
	if true {
		toSerialize["action"] = o.Action
	}
	if true {
		toSerialize["initiated_by"] = o.InitiatedBy
	}
	if o.GroupGuid != nil {
		toSerialize["group_guid"] = o.GroupGuid
	}
	if true {
		toSerialize["ui_action_date"] = o.UiActionDate
	}
	if true {
		toSerialize["login"] = o.Login
	}
	if true {
		toSerialize["org_guid"] = o.OrgGuid
	}
	return json.Marshal(toSerialize)
}

type NullableEvent struct {
	value *Event
	isSet bool
}

func (v NullableEvent) Get() *Event {
	return v.value
}

func (v *NullableEvent) Set(val *Event) {
	v.value = val
	v.isSet = true
}

func (v NullableEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvent(val *Event) *NullableEvent {
	return &NullableEvent{value: val, isSet: true}
}

func (v NullableEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
