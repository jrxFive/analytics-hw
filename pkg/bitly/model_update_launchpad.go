/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateLaunchpad struct for UpdateLaunchpad
type UpdateLaunchpad struct {
	LaunchpadId         *string              `json:"launchpad_id,omitempty"`
	Domain              *string              `json:"domain,omitempty"`
	IsActive            bool                 `json:"is_active"`
	LaunchpadAppearance *LaunchpadAppearance `json:"launchpad_appearance,omitempty"`
	Keyword             *string              `json:"keyword,omitempty"`
}

// NewUpdateLaunchpad instantiates a new UpdateLaunchpad object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLaunchpad(isActive bool) *UpdateLaunchpad {
	this := UpdateLaunchpad{}
	this.IsActive = isActive
	return &this
}

// NewUpdateLaunchpadWithDefaults instantiates a new UpdateLaunchpad object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLaunchpadWithDefaults() *UpdateLaunchpad {
	this := UpdateLaunchpad{}
	return &this
}

// GetLaunchpadId returns the LaunchpadId field value if set, zero value otherwise.
func (o *UpdateLaunchpad) GetLaunchpadId() string {
	if o == nil || o.LaunchpadId == nil {
		var ret string
		return ret
	}
	return *o.LaunchpadId
}

// GetLaunchpadIdOk returns a tuple with the LaunchpadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLaunchpad) GetLaunchpadIdOk() (*string, bool) {
	if o == nil || o.LaunchpadId == nil {
		return nil, false
	}
	return o.LaunchpadId, true
}

// HasLaunchpadId returns a boolean if a field has been set.
func (o *UpdateLaunchpad) HasLaunchpadId() bool {
	if o != nil && o.LaunchpadId != nil {
		return true
	}

	return false
}

// SetLaunchpadId gets a reference to the given string and assigns it to the LaunchpadId field.
func (o *UpdateLaunchpad) SetLaunchpadId(v string) {
	o.LaunchpadId = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *UpdateLaunchpad) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLaunchpad) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *UpdateLaunchpad) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *UpdateLaunchpad) SetDomain(v string) {
	o.Domain = &v
}

// GetIsActive returns the IsActive field value
func (o *UpdateLaunchpad) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *UpdateLaunchpad) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *UpdateLaunchpad) SetIsActive(v bool) {
	o.IsActive = v
}

// GetLaunchpadAppearance returns the LaunchpadAppearance field value if set, zero value otherwise.
func (o *UpdateLaunchpad) GetLaunchpadAppearance() LaunchpadAppearance {
	if o == nil || o.LaunchpadAppearance == nil {
		var ret LaunchpadAppearance
		return ret
	}
	return *o.LaunchpadAppearance
}

// GetLaunchpadAppearanceOk returns a tuple with the LaunchpadAppearance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLaunchpad) GetLaunchpadAppearanceOk() (*LaunchpadAppearance, bool) {
	if o == nil || o.LaunchpadAppearance == nil {
		return nil, false
	}
	return o.LaunchpadAppearance, true
}

// HasLaunchpadAppearance returns a boolean if a field has been set.
func (o *UpdateLaunchpad) HasLaunchpadAppearance() bool {
	if o != nil && o.LaunchpadAppearance != nil {
		return true
	}

	return false
}

// SetLaunchpadAppearance gets a reference to the given LaunchpadAppearance and assigns it to the LaunchpadAppearance field.
func (o *UpdateLaunchpad) SetLaunchpadAppearance(v LaunchpadAppearance) {
	o.LaunchpadAppearance = &v
}

// GetKeyword returns the Keyword field value if set, zero value otherwise.
func (o *UpdateLaunchpad) GetKeyword() string {
	if o == nil || o.Keyword == nil {
		var ret string
		return ret
	}
	return *o.Keyword
}

// GetKeywordOk returns a tuple with the Keyword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLaunchpad) GetKeywordOk() (*string, bool) {
	if o == nil || o.Keyword == nil {
		return nil, false
	}
	return o.Keyword, true
}

// HasKeyword returns a boolean if a field has been set.
func (o *UpdateLaunchpad) HasKeyword() bool {
	if o != nil && o.Keyword != nil {
		return true
	}

	return false
}

// SetKeyword gets a reference to the given string and assigns it to the Keyword field.
func (o *UpdateLaunchpad) SetKeyword(v string) {
	o.Keyword = &v
}

func (o UpdateLaunchpad) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LaunchpadId != nil {
		toSerialize["launchpad_id"] = o.LaunchpadId
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if true {
		toSerialize["is_active"] = o.IsActive
	}
	if o.LaunchpadAppearance != nil {
		toSerialize["launchpad_appearance"] = o.LaunchpadAppearance
	}
	if o.Keyword != nil {
		toSerialize["keyword"] = o.Keyword
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLaunchpad struct {
	value *UpdateLaunchpad
	isSet bool
}

func (v NullableUpdateLaunchpad) Get() *UpdateLaunchpad {
	return v.value
}

func (v *NullableUpdateLaunchpad) Set(val *UpdateLaunchpad) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLaunchpad) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLaunchpad) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLaunchpad(val *UpdateLaunchpad) *NullableUpdateLaunchpad {
	return &NullableUpdateLaunchpad{value: val, isSet: true}
}

func (v NullableUpdateLaunchpad) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLaunchpad) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
