/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LaunchpadImageUploadResponse struct for LaunchpadImageUploadResponse
type LaunchpadImageUploadResponse struct {
	ImageUrl  *string `json:"image_url,omitempty"`
	ImageGuid *string `json:"image_guid,omitempty"`
}

// NewLaunchpadImageUploadResponse instantiates a new LaunchpadImageUploadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchpadImageUploadResponse() *LaunchpadImageUploadResponse {
	this := LaunchpadImageUploadResponse{}
	return &this
}

// NewLaunchpadImageUploadResponseWithDefaults instantiates a new LaunchpadImageUploadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchpadImageUploadResponseWithDefaults() *LaunchpadImageUploadResponse {
	this := LaunchpadImageUploadResponse{}
	return &this
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *LaunchpadImageUploadResponse) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadImageUploadResponse) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *LaunchpadImageUploadResponse) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *LaunchpadImageUploadResponse) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetImageGuid returns the ImageGuid field value if set, zero value otherwise.
func (o *LaunchpadImageUploadResponse) GetImageGuid() string {
	if o == nil || o.ImageGuid == nil {
		var ret string
		return ret
	}
	return *o.ImageGuid
}

// GetImageGuidOk returns a tuple with the ImageGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadImageUploadResponse) GetImageGuidOk() (*string, bool) {
	if o == nil || o.ImageGuid == nil {
		return nil, false
	}
	return o.ImageGuid, true
}

// HasImageGuid returns a boolean if a field has been set.
func (o *LaunchpadImageUploadResponse) HasImageGuid() bool {
	if o != nil && o.ImageGuid != nil {
		return true
	}

	return false
}

// SetImageGuid gets a reference to the given string and assigns it to the ImageGuid field.
func (o *LaunchpadImageUploadResponse) SetImageGuid(v string) {
	o.ImageGuid = &v
}

func (o LaunchpadImageUploadResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.ImageGuid != nil {
		toSerialize["image_guid"] = o.ImageGuid
	}
	return json.Marshal(toSerialize)
}

type NullableLaunchpadImageUploadResponse struct {
	value *LaunchpadImageUploadResponse
	isSet bool
}

func (v NullableLaunchpadImageUploadResponse) Get() *LaunchpadImageUploadResponse {
	return v.value
}

func (v *NullableLaunchpadImageUploadResponse) Set(val *LaunchpadImageUploadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchpadImageUploadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchpadImageUploadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchpadImageUploadResponse(val *LaunchpadImageUploadResponse) *NullableLaunchpadImageUploadResponse {
	return &NullableLaunchpadImageUploadResponse{value: val, isSet: true}
}

func (v NullableLaunchpadImageUploadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchpadImageUploadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
