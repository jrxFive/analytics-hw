/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LaunchpadImageUpload struct for LaunchpadImageUpload
type LaunchpadImageUpload struct {
	Position *string `json:"position,omitempty"`
	Image    *string `json:"image,omitempty"`
}

// NewLaunchpadImageUpload instantiates a new LaunchpadImageUpload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchpadImageUpload() *LaunchpadImageUpload {
	this := LaunchpadImageUpload{}
	return &this
}

// NewLaunchpadImageUploadWithDefaults instantiates a new LaunchpadImageUpload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchpadImageUploadWithDefaults() *LaunchpadImageUpload {
	this := LaunchpadImageUpload{}
	return &this
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *LaunchpadImageUpload) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadImageUpload) GetPositionOk() (*string, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *LaunchpadImageUpload) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *LaunchpadImageUpload) SetPosition(v string) {
	o.Position = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *LaunchpadImageUpload) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadImageUpload) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *LaunchpadImageUpload) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *LaunchpadImageUpload) SetImage(v string) {
	o.Image = &v
}

func (o LaunchpadImageUpload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	return json.Marshal(toSerialize)
}

type NullableLaunchpadImageUpload struct {
	value *LaunchpadImageUpload
	isSet bool
}

func (v NullableLaunchpadImageUpload) Get() *LaunchpadImageUpload {
	return v.value
}

func (v *NullableLaunchpadImageUpload) Set(val *LaunchpadImageUpload) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchpadImageUpload) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchpadImageUpload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchpadImageUpload(val *LaunchpadImageUpload) *NullableLaunchpadImageUpload {
	return &NullableLaunchpadImageUpload{value: val, isSet: true}
}

func (v NullableLaunchpadImageUpload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchpadImageUpload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
