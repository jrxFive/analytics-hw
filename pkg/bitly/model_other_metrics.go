/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OtherMetrics struct for OtherMetrics
type OtherMetrics struct {
	OtherCityClicks *int32 `json:"other_city_clicks,omitempty"`
	NoCityClicks    *int32 `json:"no_city_clicks,omitempty"`
}

// NewOtherMetrics instantiates a new OtherMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtherMetrics() *OtherMetrics {
	this := OtherMetrics{}
	return &this
}

// NewOtherMetricsWithDefaults instantiates a new OtherMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtherMetricsWithDefaults() *OtherMetrics {
	this := OtherMetrics{}
	return &this
}

// GetOtherCityClicks returns the OtherCityClicks field value if set, zero value otherwise.
func (o *OtherMetrics) GetOtherCityClicks() int32 {
	if o == nil || o.OtherCityClicks == nil {
		var ret int32
		return ret
	}
	return *o.OtherCityClicks
}

// GetOtherCityClicksOk returns a tuple with the OtherCityClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherMetrics) GetOtherCityClicksOk() (*int32, bool) {
	if o == nil || o.OtherCityClicks == nil {
		return nil, false
	}
	return o.OtherCityClicks, true
}

// HasOtherCityClicks returns a boolean if a field has been set.
func (o *OtherMetrics) HasOtherCityClicks() bool {
	if o != nil && o.OtherCityClicks != nil {
		return true
	}

	return false
}

// SetOtherCityClicks gets a reference to the given int32 and assigns it to the OtherCityClicks field.
func (o *OtherMetrics) SetOtherCityClicks(v int32) {
	o.OtherCityClicks = &v
}

// GetNoCityClicks returns the NoCityClicks field value if set, zero value otherwise.
func (o *OtherMetrics) GetNoCityClicks() int32 {
	if o == nil || o.NoCityClicks == nil {
		var ret int32
		return ret
	}
	return *o.NoCityClicks
}

// GetNoCityClicksOk returns a tuple with the NoCityClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherMetrics) GetNoCityClicksOk() (*int32, bool) {
	if o == nil || o.NoCityClicks == nil {
		return nil, false
	}
	return o.NoCityClicks, true
}

// HasNoCityClicks returns a boolean if a field has been set.
func (o *OtherMetrics) HasNoCityClicks() bool {
	if o != nil && o.NoCityClicks != nil {
		return true
	}

	return false
}

// SetNoCityClicks gets a reference to the given int32 and assigns it to the NoCityClicks field.
func (o *OtherMetrics) SetNoCityClicks(v int32) {
	o.NoCityClicks = &v
}

func (o OtherMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OtherCityClicks != nil {
		toSerialize["other_city_clicks"] = o.OtherCityClicks
	}
	if o.NoCityClicks != nil {
		toSerialize["no_city_clicks"] = o.NoCityClicks
	}
	return json.Marshal(toSerialize)
}

type NullableOtherMetrics struct {
	value *OtherMetrics
	isSet bool
}

func (v NullableOtherMetrics) Get() *OtherMetrics {
	return v.value
}

func (v *NullableOtherMetrics) Set(val *OtherMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableOtherMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableOtherMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtherMetrics(val *OtherMetrics) *NullableOtherMetrics {
	return &NullableOtherMetrics{value: val, isSet: true}
}

func (v NullableOtherMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtherMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
