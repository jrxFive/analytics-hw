/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActivityLog struct for ActivityLog
type ActivityLog struct {
	ActionDescription *string `json:"action_description,omitempty"`
	// ISO timestamp
	Ts        *string                 `json:"ts,omitempty"`
	User      *string                 `json:"user,omitempty"`
	Action    *string                 `json:"action,omitempty"`
	OrgGuid   *string                 `json:"org_guid,omitempty"`
	IpAddress *string                 `json:"ip_address,omitempty"`
	Id        *string                 `json:"id,omitempty"`
	Metadata  *map[string]interface{} `json:"metadata,omitempty"`
}

// NewActivityLog instantiates a new ActivityLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityLog() *ActivityLog {
	this := ActivityLog{}
	return &this
}

// NewActivityLogWithDefaults instantiates a new ActivityLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityLogWithDefaults() *ActivityLog {
	this := ActivityLog{}
	return &this
}

// GetActionDescription returns the ActionDescription field value if set, zero value otherwise.
func (o *ActivityLog) GetActionDescription() string {
	if o == nil || o.ActionDescription == nil {
		var ret string
		return ret
	}
	return *o.ActionDescription
}

// GetActionDescriptionOk returns a tuple with the ActionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetActionDescriptionOk() (*string, bool) {
	if o == nil || o.ActionDescription == nil {
		return nil, false
	}
	return o.ActionDescription, true
}

// HasActionDescription returns a boolean if a field has been set.
func (o *ActivityLog) HasActionDescription() bool {
	if o != nil && o.ActionDescription != nil {
		return true
	}

	return false
}

// SetActionDescription gets a reference to the given string and assigns it to the ActionDescription field.
func (o *ActivityLog) SetActionDescription(v string) {
	o.ActionDescription = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *ActivityLog) GetTs() string {
	if o == nil || o.Ts == nil {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetTsOk() (*string, bool) {
	if o == nil || o.Ts == nil {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *ActivityLog) HasTs() bool {
	if o != nil && o.Ts != nil {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *ActivityLog) SetTs(v string) {
	o.Ts = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ActivityLog) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ActivityLog) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *ActivityLog) SetUser(v string) {
	o.User = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ActivityLog) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ActivityLog) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ActivityLog) SetAction(v string) {
	o.Action = &v
}

// GetOrgGuid returns the OrgGuid field value if set, zero value otherwise.
func (o *ActivityLog) GetOrgGuid() string {
	if o == nil || o.OrgGuid == nil {
		var ret string
		return ret
	}
	return *o.OrgGuid
}

// GetOrgGuidOk returns a tuple with the OrgGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetOrgGuidOk() (*string, bool) {
	if o == nil || o.OrgGuid == nil {
		return nil, false
	}
	return o.OrgGuid, true
}

// HasOrgGuid returns a boolean if a field has been set.
func (o *ActivityLog) HasOrgGuid() bool {
	if o != nil && o.OrgGuid != nil {
		return true
	}

	return false
}

// SetOrgGuid gets a reference to the given string and assigns it to the OrgGuid field.
func (o *ActivityLog) SetOrgGuid(v string) {
	o.OrgGuid = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ActivityLog) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ActivityLog) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ActivityLog) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActivityLog) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActivityLog) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ActivityLog) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ActivityLog) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLog) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ActivityLog) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ActivityLog) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

func (o ActivityLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionDescription != nil {
		toSerialize["action_description"] = o.ActionDescription
	}
	if o.Ts != nil {
		toSerialize["ts"] = o.Ts
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.OrgGuid != nil {
		toSerialize["org_guid"] = o.OrgGuid
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableActivityLog struct {
	value *ActivityLog
	isSet bool
}

func (v NullableActivityLog) Get() *ActivityLog {
	return v.value
}

func (v *NullableActivityLog) Set(val *ActivityLog) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityLog) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityLog(val *ActivityLog) *NullableActivityLog {
	return &NullableActivityLog{value: val, isSet: true}
}

func (v NullableActivityLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
