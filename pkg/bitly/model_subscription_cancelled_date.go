/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SubscriptionCancelledDate struct for SubscriptionCancelledDate
type SubscriptionCancelledDate struct {
	// ISO timestamp
	SubscriptionCancelledDate *string `json:"subscription_cancelled_date,omitempty"`
}

// NewSubscriptionCancelledDate instantiates a new SubscriptionCancelledDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionCancelledDate() *SubscriptionCancelledDate {
	this := SubscriptionCancelledDate{}
	return &this
}

// NewSubscriptionCancelledDateWithDefaults instantiates a new SubscriptionCancelledDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionCancelledDateWithDefaults() *SubscriptionCancelledDate {
	this := SubscriptionCancelledDate{}
	return &this
}

// GetSubscriptionCancelledDate returns the SubscriptionCancelledDate field value if set, zero value otherwise.
func (o *SubscriptionCancelledDate) GetSubscriptionCancelledDate() string {
	if o == nil || o.SubscriptionCancelledDate == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionCancelledDate
}

// GetSubscriptionCancelledDateOk returns a tuple with the SubscriptionCancelledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionCancelledDate) GetSubscriptionCancelledDateOk() (*string, bool) {
	if o == nil || o.SubscriptionCancelledDate == nil {
		return nil, false
	}
	return o.SubscriptionCancelledDate, true
}

// HasSubscriptionCancelledDate returns a boolean if a field has been set.
func (o *SubscriptionCancelledDate) HasSubscriptionCancelledDate() bool {
	if o != nil && o.SubscriptionCancelledDate != nil {
		return true
	}

	return false
}

// SetSubscriptionCancelledDate gets a reference to the given string and assigns it to the SubscriptionCancelledDate field.
func (o *SubscriptionCancelledDate) SetSubscriptionCancelledDate(v string) {
	o.SubscriptionCancelledDate = &v
}

func (o SubscriptionCancelledDate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubscriptionCancelledDate != nil {
		toSerialize["subscription_cancelled_date"] = o.SubscriptionCancelledDate
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionCancelledDate struct {
	value *SubscriptionCancelledDate
	isSet bool
}

func (v NullableSubscriptionCancelledDate) Get() *SubscriptionCancelledDate {
	return v.value
}

func (v *NullableSubscriptionCancelledDate) Set(val *SubscriptionCancelledDate) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionCancelledDate) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionCancelledDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionCancelledDate(val *SubscriptionCancelledDate) *NullableSubscriptionCancelledDate {
	return &NullableSubscriptionCancelledDate{value: val, isSet: true}
}

func (v NullableSubscriptionCancelledDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionCancelledDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
