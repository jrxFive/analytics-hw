/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeleteShare struct for DeleteShare
type DeleteShare struct {
	AccountLogin *string         `json:"account_login,omitempty"`
	AccountType  *SocialAccounts `json:"account_type,omitempty"`
}

// NewDeleteShare instantiates a new DeleteShare object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteShare() *DeleteShare {
	this := DeleteShare{}
	return &this
}

// NewDeleteShareWithDefaults instantiates a new DeleteShare object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteShareWithDefaults() *DeleteShare {
	this := DeleteShare{}
	return &this
}

// GetAccountLogin returns the AccountLogin field value if set, zero value otherwise.
func (o *DeleteShare) GetAccountLogin() string {
	if o == nil || o.AccountLogin == nil {
		var ret string
		return ret
	}
	return *o.AccountLogin
}

// GetAccountLoginOk returns a tuple with the AccountLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteShare) GetAccountLoginOk() (*string, bool) {
	if o == nil || o.AccountLogin == nil {
		return nil, false
	}
	return o.AccountLogin, true
}

// HasAccountLogin returns a boolean if a field has been set.
func (o *DeleteShare) HasAccountLogin() bool {
	if o != nil && o.AccountLogin != nil {
		return true
	}

	return false
}

// SetAccountLogin gets a reference to the given string and assigns it to the AccountLogin field.
func (o *DeleteShare) SetAccountLogin(v string) {
	o.AccountLogin = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *DeleteShare) GetAccountType() SocialAccounts {
	if o == nil || o.AccountType == nil {
		var ret SocialAccounts
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteShare) GetAccountTypeOk() (*SocialAccounts, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *DeleteShare) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given SocialAccounts and assigns it to the AccountType field.
func (o *DeleteShare) SetAccountType(v SocialAccounts) {
	o.AccountType = &v
}

func (o DeleteShare) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountLogin != nil {
		toSerialize["account_login"] = o.AccountLogin
	}
	if o.AccountType != nil {
		toSerialize["account_type"] = o.AccountType
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteShare struct {
	value *DeleteShare
	isSet bool
}

func (v NullableDeleteShare) Get() *DeleteShare {
	return v.value
}

func (v *NullableDeleteShare) Set(val *DeleteShare) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteShare) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteShare) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteShare(val *DeleteShare) *NullableDeleteShare {
	return &NullableDeleteShare{value: val, isSet: true}
}

func (v NullableDeleteShare) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteShare) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
