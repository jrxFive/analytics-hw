/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SSOSlug struct for SSOSlug
type SSOSlug struct {
	UrlSlug *string `json:"url_slug,omitempty"`
}

// NewSSOSlug instantiates a new SSOSlug object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSOSlug() *SSOSlug {
	this := SSOSlug{}
	return &this
}

// NewSSOSlugWithDefaults instantiates a new SSOSlug object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSOSlugWithDefaults() *SSOSlug {
	this := SSOSlug{}
	return &this
}

// GetUrlSlug returns the UrlSlug field value if set, zero value otherwise.
func (o *SSOSlug) GetUrlSlug() string {
	if o == nil || o.UrlSlug == nil {
		var ret string
		return ret
	}
	return *o.UrlSlug
}

// GetUrlSlugOk returns a tuple with the UrlSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSOSlug) GetUrlSlugOk() (*string, bool) {
	if o == nil || o.UrlSlug == nil {
		return nil, false
	}
	return o.UrlSlug, true
}

// HasUrlSlug returns a boolean if a field has been set.
func (o *SSOSlug) HasUrlSlug() bool {
	if o != nil && o.UrlSlug != nil {
		return true
	}

	return false
}

// SetUrlSlug gets a reference to the given string and assigns it to the UrlSlug field.
func (o *SSOSlug) SetUrlSlug(v string) {
	o.UrlSlug = &v
}

func (o SSOSlug) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UrlSlug != nil {
		toSerialize["url_slug"] = o.UrlSlug
	}
	return json.Marshal(toSerialize)
}

type NullableSSOSlug struct {
	value *SSOSlug
	isSet bool
}

func (v NullableSSOSlug) Get() *SSOSlug {
	return v.value
}

func (v *NullableSSOSlug) Set(val *SSOSlug) {
	v.value = val
	v.isSet = true
}

func (v NullableSSOSlug) IsSet() bool {
	return v.isSet
}

func (v *NullableSSOSlug) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSOSlug(val *SSOSlug) *NullableSSOSlug {
	return &NullableSSOSlug{value: val, isSet: true}
}

func (v NullableSSOSlug) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSOSlug) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
