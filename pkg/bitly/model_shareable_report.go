/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ShareableReport struct for ShareableReport
type ShareableReport struct {
	BitlinkId       *string `json:"bitlink_id,omitempty"`
	ShareableReport *string `json:"shareable_report,omitempty"`
}

// NewShareableReport instantiates a new ShareableReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShareableReport() *ShareableReport {
	this := ShareableReport{}
	return &this
}

// NewShareableReportWithDefaults instantiates a new ShareableReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShareableReportWithDefaults() *ShareableReport {
	this := ShareableReport{}
	return &this
}

// GetBitlinkId returns the BitlinkId field value if set, zero value otherwise.
func (o *ShareableReport) GetBitlinkId() string {
	if o == nil || o.BitlinkId == nil {
		var ret string
		return ret
	}
	return *o.BitlinkId
}

// GetBitlinkIdOk returns a tuple with the BitlinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShareableReport) GetBitlinkIdOk() (*string, bool) {
	if o == nil || o.BitlinkId == nil {
		return nil, false
	}
	return o.BitlinkId, true
}

// HasBitlinkId returns a boolean if a field has been set.
func (o *ShareableReport) HasBitlinkId() bool {
	if o != nil && o.BitlinkId != nil {
		return true
	}

	return false
}

// SetBitlinkId gets a reference to the given string and assigns it to the BitlinkId field.
func (o *ShareableReport) SetBitlinkId(v string) {
	o.BitlinkId = &v
}

// GetShareableReport returns the ShareableReport field value if set, zero value otherwise.
func (o *ShareableReport) GetShareableReport() string {
	if o == nil || o.ShareableReport == nil {
		var ret string
		return ret
	}
	return *o.ShareableReport
}

// GetShareableReportOk returns a tuple with the ShareableReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShareableReport) GetShareableReportOk() (*string, bool) {
	if o == nil || o.ShareableReport == nil {
		return nil, false
	}
	return o.ShareableReport, true
}

// HasShareableReport returns a boolean if a field has been set.
func (o *ShareableReport) HasShareableReport() bool {
	if o != nil && o.ShareableReport != nil {
		return true
	}

	return false
}

// SetShareableReport gets a reference to the given string and assigns it to the ShareableReport field.
func (o *ShareableReport) SetShareableReport(v string) {
	o.ShareableReport = &v
}

func (o ShareableReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BitlinkId != nil {
		toSerialize["bitlink_id"] = o.BitlinkId
	}
	if o.ShareableReport != nil {
		toSerialize["shareable_report"] = o.ShareableReport
	}
	return json.Marshal(toSerialize)
}

type NullableShareableReport struct {
	value *ShareableReport
	isSet bool
}

func (v NullableShareableReport) Get() *ShareableReport {
	return v.value
}

func (v *NullableShareableReport) Set(val *ShareableReport) {
	v.value = val
	v.isSet = true
}

func (v NullableShareableReport) IsSet() bool {
	return v.isSet
}

func (v *NullableShareableReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShareableReport(val *ShareableReport) *NullableShareableReport {
	return &NullableShareableReport{value: val, isSet: true}
}

func (v NullableShareableReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShareableReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
