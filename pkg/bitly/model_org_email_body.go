/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrgEmailBody struct for OrgEmailBody
type OrgEmailBody struct {
	Login   *string `json:"login,omitempty"`
	OrgGuid *string `json:"org_guid,omitempty"`
	Email   *string `json:"email,omitempty"`
}

// NewOrgEmailBody instantiates a new OrgEmailBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgEmailBody() *OrgEmailBody {
	this := OrgEmailBody{}
	return &this
}

// NewOrgEmailBodyWithDefaults instantiates a new OrgEmailBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgEmailBodyWithDefaults() *OrgEmailBody {
	this := OrgEmailBody{}
	return &this
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *OrgEmailBody) GetLogin() string {
	if o == nil || o.Login == nil {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgEmailBody) GetLoginOk() (*string, bool) {
	if o == nil || o.Login == nil {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *OrgEmailBody) HasLogin() bool {
	if o != nil && o.Login != nil {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *OrgEmailBody) SetLogin(v string) {
	o.Login = &v
}

// GetOrgGuid returns the OrgGuid field value if set, zero value otherwise.
func (o *OrgEmailBody) GetOrgGuid() string {
	if o == nil || o.OrgGuid == nil {
		var ret string
		return ret
	}
	return *o.OrgGuid
}

// GetOrgGuidOk returns a tuple with the OrgGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgEmailBody) GetOrgGuidOk() (*string, bool) {
	if o == nil || o.OrgGuid == nil {
		return nil, false
	}
	return o.OrgGuid, true
}

// HasOrgGuid returns a boolean if a field has been set.
func (o *OrgEmailBody) HasOrgGuid() bool {
	if o != nil && o.OrgGuid != nil {
		return true
	}

	return false
}

// SetOrgGuid gets a reference to the given string and assigns it to the OrgGuid field.
func (o *OrgEmailBody) SetOrgGuid(v string) {
	o.OrgGuid = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrgEmailBody) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgEmailBody) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrgEmailBody) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrgEmailBody) SetEmail(v string) {
	o.Email = &v
}

func (o OrgEmailBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Login != nil {
		toSerialize["login"] = o.Login
	}
	if o.OrgGuid != nil {
		toSerialize["org_guid"] = o.OrgGuid
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableOrgEmailBody struct {
	value *OrgEmailBody
	isSet bool
}

func (v NullableOrgEmailBody) Get() *OrgEmailBody {
	return v.value
}

func (v *NullableOrgEmailBody) Set(val *OrgEmailBody) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgEmailBody) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgEmailBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgEmailBody(val *OrgEmailBody) *NullableOrgEmailBody {
	return &NullableOrgEmailBody{value: val, isSet: true}
}

func (v NullableOrgEmailBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgEmailBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
