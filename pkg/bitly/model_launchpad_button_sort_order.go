/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LaunchpadButtonSortOrder struct for LaunchpadButtonSortOrder
type LaunchpadButtonSortOrder struct {
	SortOrder int32  `json:"sort_order"`
	ButtonId  string `json:"button_id"`
}

// NewLaunchpadButtonSortOrder instantiates a new LaunchpadButtonSortOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchpadButtonSortOrder(sortOrder int32, buttonId string) *LaunchpadButtonSortOrder {
	this := LaunchpadButtonSortOrder{}
	this.SortOrder = sortOrder
	this.ButtonId = buttonId
	return &this
}

// NewLaunchpadButtonSortOrderWithDefaults instantiates a new LaunchpadButtonSortOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchpadButtonSortOrderWithDefaults() *LaunchpadButtonSortOrder {
	this := LaunchpadButtonSortOrder{}
	return &this
}

// GetSortOrder returns the SortOrder field value
func (o *LaunchpadButtonSortOrder) GetSortOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value
// and a boolean to check if the value has been set.
func (o *LaunchpadButtonSortOrder) GetSortOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SortOrder, true
}

// SetSortOrder sets field value
func (o *LaunchpadButtonSortOrder) SetSortOrder(v int32) {
	o.SortOrder = v
}

// GetButtonId returns the ButtonId field value
func (o *LaunchpadButtonSortOrder) GetButtonId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ButtonId
}

// GetButtonIdOk returns a tuple with the ButtonId field value
// and a boolean to check if the value has been set.
func (o *LaunchpadButtonSortOrder) GetButtonIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ButtonId, true
}

// SetButtonId sets field value
func (o *LaunchpadButtonSortOrder) SetButtonId(v string) {
	o.ButtonId = v
}

func (o LaunchpadButtonSortOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sort_order"] = o.SortOrder
	}
	if true {
		toSerialize["button_id"] = o.ButtonId
	}
	return json.Marshal(toSerialize)
}

type NullableLaunchpadButtonSortOrder struct {
	value *LaunchpadButtonSortOrder
	isSet bool
}

func (v NullableLaunchpadButtonSortOrder) Get() *LaunchpadButtonSortOrder {
	return v.value
}

func (v *NullableLaunchpadButtonSortOrder) Set(val *LaunchpadButtonSortOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchpadButtonSortOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchpadButtonSortOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchpadButtonSortOrder(val *LaunchpadButtonSortOrder) *NullableLaunchpadButtonSortOrder {
	return &NullableLaunchpadButtonSortOrder{value: val, isSet: true}
}

func (v NullableLaunchpadButtonSortOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchpadButtonSortOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
