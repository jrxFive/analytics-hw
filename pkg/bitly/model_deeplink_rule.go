/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeeplinkRule struct for DeeplinkRule
type DeeplinkRule struct {
	Bitlink    *string `json:"bitlink,omitempty"`
	InstallUrl *string `json:"install_url,omitempty"`
	// ISO timestamp
	Created    *string `json:"created,omitempty"`
	AppUriPath *string `json:"app_uri_path,omitempty"`
	// ISO timestamp
	Modified    *string `json:"modified,omitempty"`
	InstallType *string `json:"install_type,omitempty"`
	AppGuid     *string `json:"app_guid,omitempty"`
	Guid        *string `json:"guid,omitempty"`
	Os          *string `json:"os,omitempty"`
	BrandGuid   *string `json:"brand_guid,omitempty"`
}

// NewDeeplinkRule instantiates a new DeeplinkRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeeplinkRule() *DeeplinkRule {
	this := DeeplinkRule{}
	return &this
}

// NewDeeplinkRuleWithDefaults instantiates a new DeeplinkRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeeplinkRuleWithDefaults() *DeeplinkRule {
	this := DeeplinkRule{}
	return &this
}

// GetBitlink returns the Bitlink field value if set, zero value otherwise.
func (o *DeeplinkRule) GetBitlink() string {
	if o == nil || o.Bitlink == nil {
		var ret string
		return ret
	}
	return *o.Bitlink
}

// GetBitlinkOk returns a tuple with the Bitlink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetBitlinkOk() (*string, bool) {
	if o == nil || o.Bitlink == nil {
		return nil, false
	}
	return o.Bitlink, true
}

// HasBitlink returns a boolean if a field has been set.
func (o *DeeplinkRule) HasBitlink() bool {
	if o != nil && o.Bitlink != nil {
		return true
	}

	return false
}

// SetBitlink gets a reference to the given string and assigns it to the Bitlink field.
func (o *DeeplinkRule) SetBitlink(v string) {
	o.Bitlink = &v
}

// GetInstallUrl returns the InstallUrl field value if set, zero value otherwise.
func (o *DeeplinkRule) GetInstallUrl() string {
	if o == nil || o.InstallUrl == nil {
		var ret string
		return ret
	}
	return *o.InstallUrl
}

// GetInstallUrlOk returns a tuple with the InstallUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetInstallUrlOk() (*string, bool) {
	if o == nil || o.InstallUrl == nil {
		return nil, false
	}
	return o.InstallUrl, true
}

// HasInstallUrl returns a boolean if a field has been set.
func (o *DeeplinkRule) HasInstallUrl() bool {
	if o != nil && o.InstallUrl != nil {
		return true
	}

	return false
}

// SetInstallUrl gets a reference to the given string and assigns it to the InstallUrl field.
func (o *DeeplinkRule) SetInstallUrl(v string) {
	o.InstallUrl = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *DeeplinkRule) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *DeeplinkRule) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *DeeplinkRule) SetCreated(v string) {
	o.Created = &v
}

// GetAppUriPath returns the AppUriPath field value if set, zero value otherwise.
func (o *DeeplinkRule) GetAppUriPath() string {
	if o == nil || o.AppUriPath == nil {
		var ret string
		return ret
	}
	return *o.AppUriPath
}

// GetAppUriPathOk returns a tuple with the AppUriPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetAppUriPathOk() (*string, bool) {
	if o == nil || o.AppUriPath == nil {
		return nil, false
	}
	return o.AppUriPath, true
}

// HasAppUriPath returns a boolean if a field has been set.
func (o *DeeplinkRule) HasAppUriPath() bool {
	if o != nil && o.AppUriPath != nil {
		return true
	}

	return false
}

// SetAppUriPath gets a reference to the given string and assigns it to the AppUriPath field.
func (o *DeeplinkRule) SetAppUriPath(v string) {
	o.AppUriPath = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *DeeplinkRule) GetModified() string {
	if o == nil || o.Modified == nil {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetModifiedOk() (*string, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *DeeplinkRule) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *DeeplinkRule) SetModified(v string) {
	o.Modified = &v
}

// GetInstallType returns the InstallType field value if set, zero value otherwise.
func (o *DeeplinkRule) GetInstallType() string {
	if o == nil || o.InstallType == nil {
		var ret string
		return ret
	}
	return *o.InstallType
}

// GetInstallTypeOk returns a tuple with the InstallType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetInstallTypeOk() (*string, bool) {
	if o == nil || o.InstallType == nil {
		return nil, false
	}
	return o.InstallType, true
}

// HasInstallType returns a boolean if a field has been set.
func (o *DeeplinkRule) HasInstallType() bool {
	if o != nil && o.InstallType != nil {
		return true
	}

	return false
}

// SetInstallType gets a reference to the given string and assigns it to the InstallType field.
func (o *DeeplinkRule) SetInstallType(v string) {
	o.InstallType = &v
}

// GetAppGuid returns the AppGuid field value if set, zero value otherwise.
func (o *DeeplinkRule) GetAppGuid() string {
	if o == nil || o.AppGuid == nil {
		var ret string
		return ret
	}
	return *o.AppGuid
}

// GetAppGuidOk returns a tuple with the AppGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetAppGuidOk() (*string, bool) {
	if o == nil || o.AppGuid == nil {
		return nil, false
	}
	return o.AppGuid, true
}

// HasAppGuid returns a boolean if a field has been set.
func (o *DeeplinkRule) HasAppGuid() bool {
	if o != nil && o.AppGuid != nil {
		return true
	}

	return false
}

// SetAppGuid gets a reference to the given string and assigns it to the AppGuid field.
func (o *DeeplinkRule) SetAppGuid(v string) {
	o.AppGuid = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *DeeplinkRule) GetGuid() string {
	if o == nil || o.Guid == nil {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetGuidOk() (*string, bool) {
	if o == nil || o.Guid == nil {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *DeeplinkRule) HasGuid() bool {
	if o != nil && o.Guid != nil {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *DeeplinkRule) SetGuid(v string) {
	o.Guid = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *DeeplinkRule) GetOs() string {
	if o == nil || o.Os == nil {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetOsOk() (*string, bool) {
	if o == nil || o.Os == nil {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *DeeplinkRule) HasOs() bool {
	if o != nil && o.Os != nil {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *DeeplinkRule) SetOs(v string) {
	o.Os = &v
}

// GetBrandGuid returns the BrandGuid field value if set, zero value otherwise.
func (o *DeeplinkRule) GetBrandGuid() string {
	if o == nil || o.BrandGuid == nil {
		var ret string
		return ret
	}
	return *o.BrandGuid
}

// GetBrandGuidOk returns a tuple with the BrandGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeeplinkRule) GetBrandGuidOk() (*string, bool) {
	if o == nil || o.BrandGuid == nil {
		return nil, false
	}
	return o.BrandGuid, true
}

// HasBrandGuid returns a boolean if a field has been set.
func (o *DeeplinkRule) HasBrandGuid() bool {
	if o != nil && o.BrandGuid != nil {
		return true
	}

	return false
}

// SetBrandGuid gets a reference to the given string and assigns it to the BrandGuid field.
func (o *DeeplinkRule) SetBrandGuid(v string) {
	o.BrandGuid = &v
}

func (o DeeplinkRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bitlink != nil {
		toSerialize["bitlink"] = o.Bitlink
	}
	if o.InstallUrl != nil {
		toSerialize["install_url"] = o.InstallUrl
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.AppUriPath != nil {
		toSerialize["app_uri_path"] = o.AppUriPath
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	if o.InstallType != nil {
		toSerialize["install_type"] = o.InstallType
	}
	if o.AppGuid != nil {
		toSerialize["app_guid"] = o.AppGuid
	}
	if o.Guid != nil {
		toSerialize["guid"] = o.Guid
	}
	if o.Os != nil {
		toSerialize["os"] = o.Os
	}
	if o.BrandGuid != nil {
		toSerialize["brand_guid"] = o.BrandGuid
	}
	return json.Marshal(toSerialize)
}

type NullableDeeplinkRule struct {
	value *DeeplinkRule
	isSet bool
}

func (v NullableDeeplinkRule) Get() *DeeplinkRule {
	return v.value
}

func (v *NullableDeeplinkRule) Set(val *DeeplinkRule) {
	v.value = val
	v.isSet = true
}

func (v NullableDeeplinkRule) IsSet() bool {
	return v.isSet
}

func (v *NullableDeeplinkRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeeplinkRule(val *DeeplinkRule) *NullableDeeplinkRule {
	return &NullableDeeplinkRule{value: val, isSet: true}
}

func (v NullableDeeplinkRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeeplinkRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
