/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Campaigns struct for Campaigns
type Campaigns struct {
	Campaigns *[]Campaign `json:"campaigns,omitempty"`
}

// NewCampaigns instantiates a new Campaigns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaigns() *Campaigns {
	this := Campaigns{}
	return &this
}

// NewCampaignsWithDefaults instantiates a new Campaigns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignsWithDefaults() *Campaigns {
	this := Campaigns{}
	return &this
}

// GetCampaigns returns the Campaigns field value if set, zero value otherwise.
func (o *Campaigns) GetCampaigns() []Campaign {
	if o == nil || o.Campaigns == nil {
		var ret []Campaign
		return ret
	}
	return *o.Campaigns
}

// GetCampaignsOk returns a tuple with the Campaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaigns) GetCampaignsOk() (*[]Campaign, bool) {
	if o == nil || o.Campaigns == nil {
		return nil, false
	}
	return o.Campaigns, true
}

// HasCampaigns returns a boolean if a field has been set.
func (o *Campaigns) HasCampaigns() bool {
	if o != nil && o.Campaigns != nil {
		return true
	}

	return false
}

// SetCampaigns gets a reference to the given []Campaign and assigns it to the Campaigns field.
func (o *Campaigns) SetCampaigns(v []Campaign) {
	o.Campaigns = &v
}

func (o Campaigns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Campaigns != nil {
		toSerialize["campaigns"] = o.Campaigns
	}
	return json.Marshal(toSerialize)
}

type NullableCampaigns struct {
	value *Campaigns
	isSet bool
}

func (v NullableCampaigns) Get() *Campaigns {
	return v.value
}

func (v *NullableCampaigns) Set(val *Campaigns) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaigns) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaigns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaigns(val *Campaigns) *NullableCampaigns {
	return &NullableCampaigns{value: val, isSet: true}
}

func (v NullableCampaigns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaigns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
