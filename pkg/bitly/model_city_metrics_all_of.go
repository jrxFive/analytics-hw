/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CityMetricsAllOf struct for CityMetricsAllOf
type CityMetricsAllOf struct {
	Metrics      *[]CityMetric `json:"metrics,omitempty"`
	OtherMetrics *OtherMetrics `json:"other_metrics,omitempty"`
}

// NewCityMetricsAllOf instantiates a new CityMetricsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCityMetricsAllOf() *CityMetricsAllOf {
	this := CityMetricsAllOf{}
	return &this
}

// NewCityMetricsAllOfWithDefaults instantiates a new CityMetricsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCityMetricsAllOfWithDefaults() *CityMetricsAllOf {
	this := CityMetricsAllOf{}
	return &this
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *CityMetricsAllOf) GetMetrics() []CityMetric {
	if o == nil || o.Metrics == nil {
		var ret []CityMetric
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CityMetricsAllOf) GetMetricsOk() (*[]CityMetric, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *CityMetricsAllOf) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []CityMetric and assigns it to the Metrics field.
func (o *CityMetricsAllOf) SetMetrics(v []CityMetric) {
	o.Metrics = &v
}

// GetOtherMetrics returns the OtherMetrics field value if set, zero value otherwise.
func (o *CityMetricsAllOf) GetOtherMetrics() OtherMetrics {
	if o == nil || o.OtherMetrics == nil {
		var ret OtherMetrics
		return ret
	}
	return *o.OtherMetrics
}

// GetOtherMetricsOk returns a tuple with the OtherMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CityMetricsAllOf) GetOtherMetricsOk() (*OtherMetrics, bool) {
	if o == nil || o.OtherMetrics == nil {
		return nil, false
	}
	return o.OtherMetrics, true
}

// HasOtherMetrics returns a boolean if a field has been set.
func (o *CityMetricsAllOf) HasOtherMetrics() bool {
	if o != nil && o.OtherMetrics != nil {
		return true
	}

	return false
}

// SetOtherMetrics gets a reference to the given OtherMetrics and assigns it to the OtherMetrics field.
func (o *CityMetricsAllOf) SetOtherMetrics(v OtherMetrics) {
	o.OtherMetrics = &v
}

func (o CityMetricsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	if o.OtherMetrics != nil {
		toSerialize["other_metrics"] = o.OtherMetrics
	}
	return json.Marshal(toSerialize)
}

type NullableCityMetricsAllOf struct {
	value *CityMetricsAllOf
	isSet bool
}

func (v NullableCityMetricsAllOf) Get() *CityMetricsAllOf {
	return v.value
}

func (v *NullableCityMetricsAllOf) Set(val *CityMetricsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCityMetricsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCityMetricsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCityMetricsAllOf(val *CityMetricsAllOf) *NullableCityMetricsAllOf {
	return &NullableCityMetricsAllOf{value: val, isSet: true}
}

func (v NullableCityMetricsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCityMetricsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
