/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Webhooks struct for Webhooks
type Webhooks struct {
	Webhooks *[]Webhook `json:"webhooks,omitempty"`
}

// NewWebhooks instantiates a new Webhooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooks() *Webhooks {
	this := Webhooks{}
	return &this
}

// NewWebhooksWithDefaults instantiates a new Webhooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksWithDefaults() *Webhooks {
	this := Webhooks{}
	return &this
}

// GetWebhooks returns the Webhooks field value if set, zero value otherwise.
func (o *Webhooks) GetWebhooks() []Webhook {
	if o == nil || o.Webhooks == nil {
		var ret []Webhook
		return ret
	}
	return *o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhooks) GetWebhooksOk() (*[]Webhook, bool) {
	if o == nil || o.Webhooks == nil {
		return nil, false
	}
	return o.Webhooks, true
}

// HasWebhooks returns a boolean if a field has been set.
func (o *Webhooks) HasWebhooks() bool {
	if o != nil && o.Webhooks != nil {
		return true
	}

	return false
}

// SetWebhooks gets a reference to the given []Webhook and assigns it to the Webhooks field.
func (o *Webhooks) SetWebhooks(v []Webhook) {
	o.Webhooks = &v
}

func (o Webhooks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Webhooks != nil {
		toSerialize["webhooks"] = o.Webhooks
	}
	return json.Marshal(toSerialize)
}

type NullableWebhooks struct {
	value *Webhooks
	isSet bool
}

func (v NullableWebhooks) Get() *Webhooks {
	return v.value
}

func (v *NullableWebhooks) Set(val *Webhooks) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooks) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooks(val *Webhooks) *NullableWebhooks {
	return &NullableWebhooks{value: val, isSet: true}
}

func (v NullableWebhooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
