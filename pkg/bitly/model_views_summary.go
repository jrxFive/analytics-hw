/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ViewsSummary struct for ViewsSummary
type ViewsSummary struct {
	Units         *int32  `json:"units,omitempty"`
	TotalViews    *int32  `json:"total_views,omitempty"`
	UnitReference *string `json:"unit_reference,omitempty"`
	Unit          *string `json:"unit,omitempty"`
}

// NewViewsSummary instantiates a new ViewsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewsSummary() *ViewsSummary {
	this := ViewsSummary{}
	return &this
}

// NewViewsSummaryWithDefaults instantiates a new ViewsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewsSummaryWithDefaults() *ViewsSummary {
	this := ViewsSummary{}
	return &this
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *ViewsSummary) GetUnits() int32 {
	if o == nil || o.Units == nil {
		var ret int32
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsSummary) GetUnitsOk() (*int32, bool) {
	if o == nil || o.Units == nil {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *ViewsSummary) HasUnits() bool {
	if o != nil && o.Units != nil {
		return true
	}

	return false
}

// SetUnits gets a reference to the given int32 and assigns it to the Units field.
func (o *ViewsSummary) SetUnits(v int32) {
	o.Units = &v
}

// GetTotalViews returns the TotalViews field value if set, zero value otherwise.
func (o *ViewsSummary) GetTotalViews() int32 {
	if o == nil || o.TotalViews == nil {
		var ret int32
		return ret
	}
	return *o.TotalViews
}

// GetTotalViewsOk returns a tuple with the TotalViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsSummary) GetTotalViewsOk() (*int32, bool) {
	if o == nil || o.TotalViews == nil {
		return nil, false
	}
	return o.TotalViews, true
}

// HasTotalViews returns a boolean if a field has been set.
func (o *ViewsSummary) HasTotalViews() bool {
	if o != nil && o.TotalViews != nil {
		return true
	}

	return false
}

// SetTotalViews gets a reference to the given int32 and assigns it to the TotalViews field.
func (o *ViewsSummary) SetTotalViews(v int32) {
	o.TotalViews = &v
}

// GetUnitReference returns the UnitReference field value if set, zero value otherwise.
func (o *ViewsSummary) GetUnitReference() string {
	if o == nil || o.UnitReference == nil {
		var ret string
		return ret
	}
	return *o.UnitReference
}

// GetUnitReferenceOk returns a tuple with the UnitReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsSummary) GetUnitReferenceOk() (*string, bool) {
	if o == nil || o.UnitReference == nil {
		return nil, false
	}
	return o.UnitReference, true
}

// HasUnitReference returns a boolean if a field has been set.
func (o *ViewsSummary) HasUnitReference() bool {
	if o != nil && o.UnitReference != nil {
		return true
	}

	return false
}

// SetUnitReference gets a reference to the given string and assigns it to the UnitReference field.
func (o *ViewsSummary) SetUnitReference(v string) {
	o.UnitReference = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *ViewsSummary) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsSummary) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *ViewsSummary) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *ViewsSummary) SetUnit(v string) {
	o.Unit = &v
}

func (o ViewsSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Units != nil {
		toSerialize["units"] = o.Units
	}
	if o.TotalViews != nil {
		toSerialize["total_views"] = o.TotalViews
	}
	if o.UnitReference != nil {
		toSerialize["unit_reference"] = o.UnitReference
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableViewsSummary struct {
	value *ViewsSummary
	isSet bool
}

func (v NullableViewsSummary) Get() *ViewsSummary {
	return v.value
}

func (v *NullableViewsSummary) Set(val *ViewsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableViewsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableViewsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewsSummary(val *ViewsSummary) *NullableViewsSummary {
	return &NullableViewsSummary{value: val, isSet: true}
}

func (v NullableViewsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
