/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BulkShortenUpload struct for BulkShortenUpload
type BulkShortenUpload struct {
	Status     string `json:"status"`
	Name       string `json:"name"`
	Created    string `json:"created"`
	GroupGuid  string `json:"group_guid"`
	ReportUrl  string `json:"report_url"`
	UploadedBy string `json:"uploaded_by"`
	OrgGuid    string `json:"org_guid"`
}

// NewBulkShortenUpload instantiates a new BulkShortenUpload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkShortenUpload(status string, name string, created string, groupGuid string, reportUrl string, uploadedBy string, orgGuid string) *BulkShortenUpload {
	this := BulkShortenUpload{}
	this.Status = status
	this.Name = name
	this.Created = created
	this.GroupGuid = groupGuid
	this.ReportUrl = reportUrl
	this.UploadedBy = uploadedBy
	this.OrgGuid = orgGuid
	return &this
}

// NewBulkShortenUploadWithDefaults instantiates a new BulkShortenUpload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkShortenUploadWithDefaults() *BulkShortenUpload {
	this := BulkShortenUpload{}
	return &this
}

// GetStatus returns the Status field value
func (o *BulkShortenUpload) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BulkShortenUpload) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BulkShortenUpload) SetStatus(v string) {
	o.Status = v
}

// GetName returns the Name field value
func (o *BulkShortenUpload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BulkShortenUpload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BulkShortenUpload) SetName(v string) {
	o.Name = v
}

// GetCreated returns the Created field value
func (o *BulkShortenUpload) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *BulkShortenUpload) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *BulkShortenUpload) SetCreated(v string) {
	o.Created = v
}

// GetGroupGuid returns the GroupGuid field value
func (o *BulkShortenUpload) GetGroupGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupGuid
}

// GetGroupGuidOk returns a tuple with the GroupGuid field value
// and a boolean to check if the value has been set.
func (o *BulkShortenUpload) GetGroupGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupGuid, true
}

// SetGroupGuid sets field value
func (o *BulkShortenUpload) SetGroupGuid(v string) {
	o.GroupGuid = v
}

// GetReportUrl returns the ReportUrl field value
func (o *BulkShortenUpload) GetReportUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportUrl
}

// GetReportUrlOk returns a tuple with the ReportUrl field value
// and a boolean to check if the value has been set.
func (o *BulkShortenUpload) GetReportUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportUrl, true
}

// SetReportUrl sets field value
func (o *BulkShortenUpload) SetReportUrl(v string) {
	o.ReportUrl = v
}

// GetUploadedBy returns the UploadedBy field value
func (o *BulkShortenUpload) GetUploadedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadedBy
}

// GetUploadedByOk returns a tuple with the UploadedBy field value
// and a boolean to check if the value has been set.
func (o *BulkShortenUpload) GetUploadedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadedBy, true
}

// SetUploadedBy sets field value
func (o *BulkShortenUpload) SetUploadedBy(v string) {
	o.UploadedBy = v
}

// GetOrgGuid returns the OrgGuid field value
func (o *BulkShortenUpload) GetOrgGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgGuid
}

// GetOrgGuidOk returns a tuple with the OrgGuid field value
// and a boolean to check if the value has been set.
func (o *BulkShortenUpload) GetOrgGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgGuid, true
}

// SetOrgGuid sets field value
func (o *BulkShortenUpload) SetOrgGuid(v string) {
	o.OrgGuid = v
}

func (o BulkShortenUpload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["group_guid"] = o.GroupGuid
	}
	if true {
		toSerialize["report_url"] = o.ReportUrl
	}
	if true {
		toSerialize["uploaded_by"] = o.UploadedBy
	}
	if true {
		toSerialize["org_guid"] = o.OrgGuid
	}
	return json.Marshal(toSerialize)
}

type NullableBulkShortenUpload struct {
	value *BulkShortenUpload
	isSet bool
}

func (v NullableBulkShortenUpload) Get() *BulkShortenUpload {
	return v.value
}

func (v *NullableBulkShortenUpload) Set(val *BulkShortenUpload) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkShortenUpload) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkShortenUpload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkShortenUpload(val *BulkShortenUpload) *NullableBulkShortenUpload {
	return &NullableBulkShortenUpload{value: val, isSet: true}
}

func (v NullableBulkShortenUpload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkShortenUpload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
