/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebhookCreate struct for WebhookCreate
type WebhookCreate struct {
	Name             string  `json:"name"`
	Url              string  `json:"url"`
	GroupGuid        *string `json:"group_guid,omitempty"`
	FetchTags        *bool   `json:"fetch_tags,omitempty"`
	IsActive         *bool   `json:"is_active,omitempty"`
	OrganizationGuid string  `json:"organization_guid"`
	ClientId         *string `json:"client_id,omitempty"`
	ClientSecret     *string `json:"client_secret,omitempty"`
	OauthUrl         *string `json:"oauth_url,omitempty"`
	Event            string  `json:"event"`
}

// NewWebhookCreate instantiates a new WebhookCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookCreate(name string, url string, organizationGuid string, event string) *WebhookCreate {
	this := WebhookCreate{}
	this.Name = name
	this.Url = url
	this.OrganizationGuid = organizationGuid
	this.Event = event
	return &this
}

// NewWebhookCreateWithDefaults instantiates a new WebhookCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookCreateWithDefaults() *WebhookCreate {
	this := WebhookCreate{}
	return &this
}

// GetName returns the Name field value
func (o *WebhookCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebhookCreate) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *WebhookCreate) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookCreate) SetUrl(v string) {
	o.Url = v
}

// GetGroupGuid returns the GroupGuid field value if set, zero value otherwise.
func (o *WebhookCreate) GetGroupGuid() string {
	if o == nil || o.GroupGuid == nil {
		var ret string
		return ret
	}
	return *o.GroupGuid
}

// GetGroupGuidOk returns a tuple with the GroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetGroupGuidOk() (*string, bool) {
	if o == nil || o.GroupGuid == nil {
		return nil, false
	}
	return o.GroupGuid, true
}

// HasGroupGuid returns a boolean if a field has been set.
func (o *WebhookCreate) HasGroupGuid() bool {
	if o != nil && o.GroupGuid != nil {
		return true
	}

	return false
}

// SetGroupGuid gets a reference to the given string and assigns it to the GroupGuid field.
func (o *WebhookCreate) SetGroupGuid(v string) {
	o.GroupGuid = &v
}

// GetFetchTags returns the FetchTags field value if set, zero value otherwise.
func (o *WebhookCreate) GetFetchTags() bool {
	if o == nil || o.FetchTags == nil {
		var ret bool
		return ret
	}
	return *o.FetchTags
}

// GetFetchTagsOk returns a tuple with the FetchTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetFetchTagsOk() (*bool, bool) {
	if o == nil || o.FetchTags == nil {
		return nil, false
	}
	return o.FetchTags, true
}

// HasFetchTags returns a boolean if a field has been set.
func (o *WebhookCreate) HasFetchTags() bool {
	if o != nil && o.FetchTags != nil {
		return true
	}

	return false
}

// SetFetchTags gets a reference to the given bool and assigns it to the FetchTags field.
func (o *WebhookCreate) SetFetchTags(v bool) {
	o.FetchTags = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *WebhookCreate) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *WebhookCreate) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *WebhookCreate) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetOrganizationGuid returns the OrganizationGuid field value
func (o *WebhookCreate) GetOrganizationGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationGuid
}

// GetOrganizationGuidOk returns a tuple with the OrganizationGuid field value
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetOrganizationGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationGuid, true
}

// SetOrganizationGuid sets field value
func (o *WebhookCreate) SetOrganizationGuid(v string) {
	o.OrganizationGuid = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *WebhookCreate) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *WebhookCreate) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *WebhookCreate) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *WebhookCreate) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *WebhookCreate) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *WebhookCreate) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetOauthUrl returns the OauthUrl field value if set, zero value otherwise.
func (o *WebhookCreate) GetOauthUrl() string {
	if o == nil || o.OauthUrl == nil {
		var ret string
		return ret
	}
	return *o.OauthUrl
}

// GetOauthUrlOk returns a tuple with the OauthUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetOauthUrlOk() (*string, bool) {
	if o == nil || o.OauthUrl == nil {
		return nil, false
	}
	return o.OauthUrl, true
}

// HasOauthUrl returns a boolean if a field has been set.
func (o *WebhookCreate) HasOauthUrl() bool {
	if o != nil && o.OauthUrl != nil {
		return true
	}

	return false
}

// SetOauthUrl gets a reference to the given string and assigns it to the OauthUrl field.
func (o *WebhookCreate) SetOauthUrl(v string) {
	o.OauthUrl = &v
}

// GetEvent returns the Event field value
func (o *WebhookCreate) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *WebhookCreate) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *WebhookCreate) SetEvent(v string) {
	o.Event = v
}

func (o WebhookCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if o.GroupGuid != nil {
		toSerialize["group_guid"] = o.GroupGuid
	}
	if o.FetchTags != nil {
		toSerialize["fetch_tags"] = o.FetchTags
	}
	if o.IsActive != nil {
		toSerialize["is_active"] = o.IsActive
	}
	if true {
		toSerialize["organization_guid"] = o.OrganizationGuid
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.OauthUrl != nil {
		toSerialize["oauth_url"] = o.OauthUrl
	}
	if true {
		toSerialize["event"] = o.Event
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookCreate struct {
	value *WebhookCreate
	isSet bool
}

func (v NullableWebhookCreate) Get() *WebhookCreate {
	return v.value
}

func (v *NullableWebhookCreate) Set(val *WebhookCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookCreate(val *WebhookCreate) *NullableWebhookCreate {
	return &NullableWebhookCreate{value: val, isSet: true}
}

func (v NullableWebhookCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
