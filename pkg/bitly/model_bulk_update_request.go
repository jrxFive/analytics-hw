/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BulkUpdateRequest struct for BulkUpdateRequest
type BulkUpdateRequest struct {
	Action     *string   `json:"action,omitempty"`
	RemoveTags *[]string `json:"remove_tags,omitempty"`
	Archive    *bool     `json:"archive,omitempty"`
	// this is limited to 100 bitlink ids
	Links   *[]string `json:"links,omitempty"`
	AddTags *[]string `json:"add_tags,omitempty"`
}

// NewBulkUpdateRequest instantiates a new BulkUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkUpdateRequest() *BulkUpdateRequest {
	this := BulkUpdateRequest{}
	return &this
}

// NewBulkUpdateRequestWithDefaults instantiates a new BulkUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkUpdateRequestWithDefaults() *BulkUpdateRequest {
	this := BulkUpdateRequest{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *BulkUpdateRequest) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateRequest) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *BulkUpdateRequest) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *BulkUpdateRequest) SetAction(v string) {
	o.Action = &v
}

// GetRemoveTags returns the RemoveTags field value if set, zero value otherwise.
func (o *BulkUpdateRequest) GetRemoveTags() []string {
	if o == nil || o.RemoveTags == nil {
		var ret []string
		return ret
	}
	return *o.RemoveTags
}

// GetRemoveTagsOk returns a tuple with the RemoveTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateRequest) GetRemoveTagsOk() (*[]string, bool) {
	if o == nil || o.RemoveTags == nil {
		return nil, false
	}
	return o.RemoveTags, true
}

// HasRemoveTags returns a boolean if a field has been set.
func (o *BulkUpdateRequest) HasRemoveTags() bool {
	if o != nil && o.RemoveTags != nil {
		return true
	}

	return false
}

// SetRemoveTags gets a reference to the given []string and assigns it to the RemoveTags field.
func (o *BulkUpdateRequest) SetRemoveTags(v []string) {
	o.RemoveTags = &v
}

// GetArchive returns the Archive field value if set, zero value otherwise.
func (o *BulkUpdateRequest) GetArchive() bool {
	if o == nil || o.Archive == nil {
		var ret bool
		return ret
	}
	return *o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateRequest) GetArchiveOk() (*bool, bool) {
	if o == nil || o.Archive == nil {
		return nil, false
	}
	return o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *BulkUpdateRequest) HasArchive() bool {
	if o != nil && o.Archive != nil {
		return true
	}

	return false
}

// SetArchive gets a reference to the given bool and assigns it to the Archive field.
func (o *BulkUpdateRequest) SetArchive(v bool) {
	o.Archive = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BulkUpdateRequest) GetLinks() []string {
	if o == nil || o.Links == nil {
		var ret []string
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateRequest) GetLinksOk() (*[]string, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BulkUpdateRequest) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []string and assigns it to the Links field.
func (o *BulkUpdateRequest) SetLinks(v []string) {
	o.Links = &v
}

// GetAddTags returns the AddTags field value if set, zero value otherwise.
func (o *BulkUpdateRequest) GetAddTags() []string {
	if o == nil || o.AddTags == nil {
		var ret []string
		return ret
	}
	return *o.AddTags
}

// GetAddTagsOk returns a tuple with the AddTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateRequest) GetAddTagsOk() (*[]string, bool) {
	if o == nil || o.AddTags == nil {
		return nil, false
	}
	return o.AddTags, true
}

// HasAddTags returns a boolean if a field has been set.
func (o *BulkUpdateRequest) HasAddTags() bool {
	if o != nil && o.AddTags != nil {
		return true
	}

	return false
}

// SetAddTags gets a reference to the given []string and assigns it to the AddTags field.
func (o *BulkUpdateRequest) SetAddTags(v []string) {
	o.AddTags = &v
}

func (o BulkUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.RemoveTags != nil {
		toSerialize["remove_tags"] = o.RemoveTags
	}
	if o.Archive != nil {
		toSerialize["archive"] = o.Archive
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.AddTags != nil {
		toSerialize["add_tags"] = o.AddTags
	}
	return json.Marshal(toSerialize)
}

type NullableBulkUpdateRequest struct {
	value *BulkUpdateRequest
	isSet bool
}

func (v NullableBulkUpdateRequest) Get() *BulkUpdateRequest {
	return v.value
}

func (v *NullableBulkUpdateRequest) Set(val *BulkUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUpdateRequest(val *BulkUpdateRequest) *NullableBulkUpdateRequest {
	return &NullableBulkUpdateRequest{value: val, isSet: true}
}

func (v NullableBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
