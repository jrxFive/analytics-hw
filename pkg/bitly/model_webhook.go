/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Webhook struct for Webhook
type Webhook struct {
	References       *map[string]string `json:"references,omitempty"`
	Status           *string            `json:"status,omitempty"`
	ModifiedBy       string             `json:"modified_by"`
	Name             string             `json:"name"`
	Created          string             `json:"created"`
	Url              string             `json:"url"`
	Deactivated      string             `json:"deactivated"`
	FetchTags        *bool              `json:"fetch_tags,omitempty"`
	IsActive         bool               `json:"is_active"`
	Modified         string             `json:"modified"`
	OrganizationGuid string             `json:"organization_guid"`
	ClientId         *string            `json:"client_id,omitempty"`
	GroupGuid        *string            `json:"group_guid,omitempty"`
	ClientSecret     *string            `json:"client_secret,omitempty"`
	OauthUrl         *string            `json:"oauth_url,omitempty"`
	Guid             string             `json:"guid"`
	Event            string             `json:"event"`
}

// NewWebhook instantiates a new Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhook(modifiedBy string, name string, created string, url string, deactivated string, isActive bool, modified string, organizationGuid string, guid string, event string) *Webhook {
	this := Webhook{}
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.Created = created
	this.Url = url
	this.Deactivated = deactivated
	this.IsActive = isActive
	this.Modified = modified
	this.OrganizationGuid = organizationGuid
	this.Guid = guid
	this.Event = event
	return &this
}

// NewWebhookWithDefaults instantiates a new Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWithDefaults() *Webhook {
	this := Webhook{}
	return &this
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *Webhook) GetReferences() map[string]string {
	if o == nil || o.References == nil {
		var ret map[string]string
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetReferencesOk() (*map[string]string, bool) {
	if o == nil || o.References == nil {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *Webhook) HasReferences() bool {
	if o != nil && o.References != nil {
		return true
	}

	return false
}

// SetReferences gets a reference to the given map[string]string and assigns it to the References field.
func (o *Webhook) SetReferences(v map[string]string) {
	o.References = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Webhook) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Webhook) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Webhook) SetStatus(v string) {
	o.Status = &v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *Webhook) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *Webhook) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *Webhook) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Webhook) SetName(v string) {
	o.Name = v
}

// GetCreated returns the Created field value
func (o *Webhook) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *Webhook) SetCreated(v string) {
	o.Created = v
}

// GetUrl returns the Url field value
func (o *Webhook) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Webhook) SetUrl(v string) {
	o.Url = v
}

// GetDeactivated returns the Deactivated field value
func (o *Webhook) GetDeactivated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Deactivated
}

// GetDeactivatedOk returns a tuple with the Deactivated field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetDeactivatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deactivated, true
}

// SetDeactivated sets field value
func (o *Webhook) SetDeactivated(v string) {
	o.Deactivated = v
}

// GetFetchTags returns the FetchTags field value if set, zero value otherwise.
func (o *Webhook) GetFetchTags() bool {
	if o == nil || o.FetchTags == nil {
		var ret bool
		return ret
	}
	return *o.FetchTags
}

// GetFetchTagsOk returns a tuple with the FetchTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetFetchTagsOk() (*bool, bool) {
	if o == nil || o.FetchTags == nil {
		return nil, false
	}
	return o.FetchTags, true
}

// HasFetchTags returns a boolean if a field has been set.
func (o *Webhook) HasFetchTags() bool {
	if o != nil && o.FetchTags != nil {
		return true
	}

	return false
}

// SetFetchTags gets a reference to the given bool and assigns it to the FetchTags field.
func (o *Webhook) SetFetchTags(v bool) {
	o.FetchTags = &v
}

// GetIsActive returns the IsActive field value
func (o *Webhook) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *Webhook) SetIsActive(v bool) {
	o.IsActive = v
}

// GetModified returns the Modified field value
func (o *Webhook) GetModified() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *Webhook) SetModified(v string) {
	o.Modified = v
}

// GetOrganizationGuid returns the OrganizationGuid field value
func (o *Webhook) GetOrganizationGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationGuid
}

// GetOrganizationGuidOk returns a tuple with the OrganizationGuid field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetOrganizationGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationGuid, true
}

// SetOrganizationGuid sets field value
func (o *Webhook) SetOrganizationGuid(v string) {
	o.OrganizationGuid = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Webhook) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Webhook) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Webhook) SetClientId(v string) {
	o.ClientId = &v
}

// GetGroupGuid returns the GroupGuid field value if set, zero value otherwise.
func (o *Webhook) GetGroupGuid() string {
	if o == nil || o.GroupGuid == nil {
		var ret string
		return ret
	}
	return *o.GroupGuid
}

// GetGroupGuidOk returns a tuple with the GroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetGroupGuidOk() (*string, bool) {
	if o == nil || o.GroupGuid == nil {
		return nil, false
	}
	return o.GroupGuid, true
}

// HasGroupGuid returns a boolean if a field has been set.
func (o *Webhook) HasGroupGuid() bool {
	if o != nil && o.GroupGuid != nil {
		return true
	}

	return false
}

// SetGroupGuid gets a reference to the given string and assigns it to the GroupGuid field.
func (o *Webhook) SetGroupGuid(v string) {
	o.GroupGuid = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *Webhook) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *Webhook) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *Webhook) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetOauthUrl returns the OauthUrl field value if set, zero value otherwise.
func (o *Webhook) GetOauthUrl() string {
	if o == nil || o.OauthUrl == nil {
		var ret string
		return ret
	}
	return *o.OauthUrl
}

// GetOauthUrlOk returns a tuple with the OauthUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetOauthUrlOk() (*string, bool) {
	if o == nil || o.OauthUrl == nil {
		return nil, false
	}
	return o.OauthUrl, true
}

// HasOauthUrl returns a boolean if a field has been set.
func (o *Webhook) HasOauthUrl() bool {
	if o != nil && o.OauthUrl != nil {
		return true
	}

	return false
}

// SetOauthUrl gets a reference to the given string and assigns it to the OauthUrl field.
func (o *Webhook) SetOauthUrl(v string) {
	o.OauthUrl = &v
}

// GetGuid returns the Guid field value
func (o *Webhook) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *Webhook) SetGuid(v string) {
	o.Guid = v
}

// GetEvent returns the Event field value
func (o *Webhook) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *Webhook) SetEvent(v string) {
	o.Event = v
}

func (o Webhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.References != nil {
		toSerialize["references"] = o.References
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["modified_by"] = o.ModifiedBy
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["deactivated"] = o.Deactivated
	}
	if o.FetchTags != nil {
		toSerialize["fetch_tags"] = o.FetchTags
	}
	if true {
		toSerialize["is_active"] = o.IsActive
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if true {
		toSerialize["organization_guid"] = o.OrganizationGuid
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.GroupGuid != nil {
		toSerialize["group_guid"] = o.GroupGuid
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.OauthUrl != nil {
		toSerialize["oauth_url"] = o.OauthUrl
	}
	if true {
		toSerialize["guid"] = o.Guid
	}
	if true {
		toSerialize["event"] = o.Event
	}
	return json.Marshal(toSerialize)
}

type NullableWebhook struct {
	value *Webhook
	isSet bool
}

func (v NullableWebhook) Get() *Webhook {
	return v.value
}

func (v *NullableWebhook) Set(val *Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhook(val *Webhook) *NullableWebhook {
	return &NullableWebhook{value: val, isSet: true}
}

func (v NullableWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
