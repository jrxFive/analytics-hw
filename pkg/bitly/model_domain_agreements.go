/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainAgreements struct for DomainAgreements
type DomainAgreements struct {
	DomainAgreements *[]DomainAgreement `json:"domain_agreements,omitempty"`
}

// NewDomainAgreements instantiates a new DomainAgreements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainAgreements() *DomainAgreements {
	this := DomainAgreements{}
	return &this
}

// NewDomainAgreementsWithDefaults instantiates a new DomainAgreements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainAgreementsWithDefaults() *DomainAgreements {
	this := DomainAgreements{}
	return &this
}

// GetDomainAgreements returns the DomainAgreements field value if set, zero value otherwise.
func (o *DomainAgreements) GetDomainAgreements() []DomainAgreement {
	if o == nil || o.DomainAgreements == nil {
		var ret []DomainAgreement
		return ret
	}
	return *o.DomainAgreements
}

// GetDomainAgreementsOk returns a tuple with the DomainAgreements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainAgreements) GetDomainAgreementsOk() (*[]DomainAgreement, bool) {
	if o == nil || o.DomainAgreements == nil {
		return nil, false
	}
	return o.DomainAgreements, true
}

// HasDomainAgreements returns a boolean if a field has been set.
func (o *DomainAgreements) HasDomainAgreements() bool {
	if o != nil && o.DomainAgreements != nil {
		return true
	}

	return false
}

// SetDomainAgreements gets a reference to the given []DomainAgreement and assigns it to the DomainAgreements field.
func (o *DomainAgreements) SetDomainAgreements(v []DomainAgreement) {
	o.DomainAgreements = &v
}

func (o DomainAgreements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainAgreements != nil {
		toSerialize["domain_agreements"] = o.DomainAgreements
	}
	return json.Marshal(toSerialize)
}

type NullableDomainAgreements struct {
	value *DomainAgreements
	isSet bool
}

func (v NullableDomainAgreements) Get() *DomainAgreements {
	return v.value
}

func (v *NullableDomainAgreements) Set(val *DomainAgreements) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainAgreements) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainAgreements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainAgreements(val *DomainAgreements) *NullableDomainAgreements {
	return &NullableDomainAgreements{value: val, isSet: true}
}

func (v NullableDomainAgreements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainAgreements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
