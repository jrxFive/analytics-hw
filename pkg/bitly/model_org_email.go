/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrgEmail struct for OrgEmail
type OrgEmail struct {
	OrgGuid   *string `json:"org_guid,omitempty"`
	CreatedTs *int32  `json:"created_ts,omitempty"`
	Login     *string `json:"login,omitempty"`
	Email     *string `json:"email,omitempty"`
}

// NewOrgEmail instantiates a new OrgEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgEmail() *OrgEmail {
	this := OrgEmail{}
	return &this
}

// NewOrgEmailWithDefaults instantiates a new OrgEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgEmailWithDefaults() *OrgEmail {
	this := OrgEmail{}
	return &this
}

// GetOrgGuid returns the OrgGuid field value if set, zero value otherwise.
func (o *OrgEmail) GetOrgGuid() string {
	if o == nil || o.OrgGuid == nil {
		var ret string
		return ret
	}
	return *o.OrgGuid
}

// GetOrgGuidOk returns a tuple with the OrgGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgEmail) GetOrgGuidOk() (*string, bool) {
	if o == nil || o.OrgGuid == nil {
		return nil, false
	}
	return o.OrgGuid, true
}

// HasOrgGuid returns a boolean if a field has been set.
func (o *OrgEmail) HasOrgGuid() bool {
	if o != nil && o.OrgGuid != nil {
		return true
	}

	return false
}

// SetOrgGuid gets a reference to the given string and assigns it to the OrgGuid field.
func (o *OrgEmail) SetOrgGuid(v string) {
	o.OrgGuid = &v
}

// GetCreatedTs returns the CreatedTs field value if set, zero value otherwise.
func (o *OrgEmail) GetCreatedTs() int32 {
	if o == nil || o.CreatedTs == nil {
		var ret int32
		return ret
	}
	return *o.CreatedTs
}

// GetCreatedTsOk returns a tuple with the CreatedTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgEmail) GetCreatedTsOk() (*int32, bool) {
	if o == nil || o.CreatedTs == nil {
		return nil, false
	}
	return o.CreatedTs, true
}

// HasCreatedTs returns a boolean if a field has been set.
func (o *OrgEmail) HasCreatedTs() bool {
	if o != nil && o.CreatedTs != nil {
		return true
	}

	return false
}

// SetCreatedTs gets a reference to the given int32 and assigns it to the CreatedTs field.
func (o *OrgEmail) SetCreatedTs(v int32) {
	o.CreatedTs = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *OrgEmail) GetLogin() string {
	if o == nil || o.Login == nil {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgEmail) GetLoginOk() (*string, bool) {
	if o == nil || o.Login == nil {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *OrgEmail) HasLogin() bool {
	if o != nil && o.Login != nil {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *OrgEmail) SetLogin(v string) {
	o.Login = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrgEmail) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgEmail) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrgEmail) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrgEmail) SetEmail(v string) {
	o.Email = &v
}

func (o OrgEmail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrgGuid != nil {
		toSerialize["org_guid"] = o.OrgGuid
	}
	if o.CreatedTs != nil {
		toSerialize["created_ts"] = o.CreatedTs
	}
	if o.Login != nil {
		toSerialize["login"] = o.Login
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableOrgEmail struct {
	value *OrgEmail
	isSet bool
}

func (v NullableOrgEmail) Get() *OrgEmail {
	return v.value
}

func (v *NullableOrgEmail) Set(val *OrgEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgEmail(val *OrgEmail) *NullableOrgEmail {
	return &NullableOrgEmail{value: val, isSet: true}
}

func (v NullableOrgEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
