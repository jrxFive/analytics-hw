/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvitationsCreate struct for InvitationsCreate
type InvitationsCreate struct {
	RoleName string             `json:"role_name"`
	Emails   []string           `json:"emails"`
	Groups   *[]InvitationGroup `json:"groups,omitempty"`
	Created  *string            `json:"created,omitempty"`
}

// NewInvitationsCreate instantiates a new InvitationsCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvitationsCreate(roleName string, emails []string) *InvitationsCreate {
	this := InvitationsCreate{}
	this.RoleName = roleName
	this.Emails = emails
	return &this
}

// NewInvitationsCreateWithDefaults instantiates a new InvitationsCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvitationsCreateWithDefaults() *InvitationsCreate {
	this := InvitationsCreate{}
	return &this
}

// GetRoleName returns the RoleName field value
func (o *InvitationsCreate) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *InvitationsCreate) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *InvitationsCreate) SetRoleName(v string) {
	o.RoleName = v
}

// GetEmails returns the Emails field value
func (o *InvitationsCreate) GetEmails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *InvitationsCreate) GetEmailsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Emails, true
}

// SetEmails sets field value
func (o *InvitationsCreate) SetEmails(v []string) {
	o.Emails = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *InvitationsCreate) GetGroups() []InvitationGroup {
	if o == nil || o.Groups == nil {
		var ret []InvitationGroup
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationsCreate) GetGroupsOk() (*[]InvitationGroup, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *InvitationsCreate) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []InvitationGroup and assigns it to the Groups field.
func (o *InvitationsCreate) SetGroups(v []InvitationGroup) {
	o.Groups = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *InvitationsCreate) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationsCreate) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *InvitationsCreate) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *InvitationsCreate) SetCreated(v string) {
	o.Created = &v
}

func (o InvitationsCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["role_name"] = o.RoleName
	}
	if true {
		toSerialize["emails"] = o.Emails
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	return json.Marshal(toSerialize)
}

type NullableInvitationsCreate struct {
	value *InvitationsCreate
	isSet bool
}

func (v NullableInvitationsCreate) Get() *InvitationsCreate {
	return v.value
}

func (v *NullableInvitationsCreate) Set(val *InvitationsCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableInvitationsCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableInvitationsCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvitationsCreate(val *InvitationsCreate) *NullableInvitationsCreate {
	return &NullableInvitationsCreate{value: val, isSet: true}
}

func (v NullableInvitationsCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvitationsCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
