/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainStatus struct for DomainStatus
type DomainStatus struct {
	Status *string `json:"status,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Price  *string `json:"price,omitempty"`
	Zone   *string `json:"zone,omitempty"`
}

// NewDomainStatus instantiates a new DomainStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainStatus() *DomainStatus {
	this := DomainStatus{}
	return &this
}

// NewDomainStatusWithDefaults instantiates a new DomainStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainStatusWithDefaults() *DomainStatus {
	this := DomainStatus{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DomainStatus) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainStatus) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DomainStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DomainStatus) SetStatus(v string) {
	o.Status = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DomainStatus) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainStatus) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DomainStatus) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DomainStatus) SetDomain(v string) {
	o.Domain = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *DomainStatus) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainStatus) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *DomainStatus) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *DomainStatus) SetPrice(v string) {
	o.Price = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *DomainStatus) GetZone() string {
	if o == nil || o.Zone == nil {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainStatus) GetZoneOk() (*string, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *DomainStatus) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *DomainStatus) SetZone(v string) {
	o.Zone = &v
}

func (o DomainStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableDomainStatus struct {
	value *DomainStatus
	isSet bool
}

func (v NullableDomainStatus) Get() *DomainStatus {
	return v.value
}

func (v *NullableDomainStatus) Set(val *DomainStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainStatus(val *DomainStatus) *NullableDomainStatus {
	return &NullableDomainStatus{value: val, isSet: true}
}

func (v NullableDomainStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
