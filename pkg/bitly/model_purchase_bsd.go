/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PurchaseBSD struct for PurchaseBSD
type PurchaseBSD struct {
	Domain *string `json:"domain,omitempty"`
	// ISO_TIMESTAMP
	AgreedAt         *string   `json:"agreed_at,omitempty"`
	OrganizationGuid *string   `json:"organization_guid,omitempty"`
	AgreementKeys    *[]string `json:"agreement_keys,omitempty"`
}

// NewPurchaseBSD instantiates a new PurchaseBSD object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseBSD() *PurchaseBSD {
	this := PurchaseBSD{}
	return &this
}

// NewPurchaseBSDWithDefaults instantiates a new PurchaseBSD object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseBSDWithDefaults() *PurchaseBSD {
	this := PurchaseBSD{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PurchaseBSD) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseBSD) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PurchaseBSD) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *PurchaseBSD) SetDomain(v string) {
	o.Domain = &v
}

// GetAgreedAt returns the AgreedAt field value if set, zero value otherwise.
func (o *PurchaseBSD) GetAgreedAt() string {
	if o == nil || o.AgreedAt == nil {
		var ret string
		return ret
	}
	return *o.AgreedAt
}

// GetAgreedAtOk returns a tuple with the AgreedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseBSD) GetAgreedAtOk() (*string, bool) {
	if o == nil || o.AgreedAt == nil {
		return nil, false
	}
	return o.AgreedAt, true
}

// HasAgreedAt returns a boolean if a field has been set.
func (o *PurchaseBSD) HasAgreedAt() bool {
	if o != nil && o.AgreedAt != nil {
		return true
	}

	return false
}

// SetAgreedAt gets a reference to the given string and assigns it to the AgreedAt field.
func (o *PurchaseBSD) SetAgreedAt(v string) {
	o.AgreedAt = &v
}

// GetOrganizationGuid returns the OrganizationGuid field value if set, zero value otherwise.
func (o *PurchaseBSD) GetOrganizationGuid() string {
	if o == nil || o.OrganizationGuid == nil {
		var ret string
		return ret
	}
	return *o.OrganizationGuid
}

// GetOrganizationGuidOk returns a tuple with the OrganizationGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseBSD) GetOrganizationGuidOk() (*string, bool) {
	if o == nil || o.OrganizationGuid == nil {
		return nil, false
	}
	return o.OrganizationGuid, true
}

// HasOrganizationGuid returns a boolean if a field has been set.
func (o *PurchaseBSD) HasOrganizationGuid() bool {
	if o != nil && o.OrganizationGuid != nil {
		return true
	}

	return false
}

// SetOrganizationGuid gets a reference to the given string and assigns it to the OrganizationGuid field.
func (o *PurchaseBSD) SetOrganizationGuid(v string) {
	o.OrganizationGuid = &v
}

// GetAgreementKeys returns the AgreementKeys field value if set, zero value otherwise.
func (o *PurchaseBSD) GetAgreementKeys() []string {
	if o == nil || o.AgreementKeys == nil {
		var ret []string
		return ret
	}
	return *o.AgreementKeys
}

// GetAgreementKeysOk returns a tuple with the AgreementKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseBSD) GetAgreementKeysOk() (*[]string, bool) {
	if o == nil || o.AgreementKeys == nil {
		return nil, false
	}
	return o.AgreementKeys, true
}

// HasAgreementKeys returns a boolean if a field has been set.
func (o *PurchaseBSD) HasAgreementKeys() bool {
	if o != nil && o.AgreementKeys != nil {
		return true
	}

	return false
}

// SetAgreementKeys gets a reference to the given []string and assigns it to the AgreementKeys field.
func (o *PurchaseBSD) SetAgreementKeys(v []string) {
	o.AgreementKeys = &v
}

func (o PurchaseBSD) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.AgreedAt != nil {
		toSerialize["agreed_at"] = o.AgreedAt
	}
	if o.OrganizationGuid != nil {
		toSerialize["organization_guid"] = o.OrganizationGuid
	}
	if o.AgreementKeys != nil {
		toSerialize["agreement_keys"] = o.AgreementKeys
	}
	return json.Marshal(toSerialize)
}

type NullablePurchaseBSD struct {
	value *PurchaseBSD
	isSet bool
}

func (v NullablePurchaseBSD) Get() *PurchaseBSD {
	return v.value
}

func (v *NullablePurchaseBSD) Set(val *PurchaseBSD) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseBSD) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseBSD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseBSD(val *PurchaseBSD) *NullablePurchaseBSD {
	return &NullablePurchaseBSD{value: val, isSet: true}
}

func (v NullablePurchaseBSD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseBSD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
