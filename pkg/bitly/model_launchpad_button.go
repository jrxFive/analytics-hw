/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LaunchpadButton struct for LaunchpadButton
type LaunchpadButton struct {
	LaunchpadId   *string `json:"launchpad_id,omitempty"`
	Bitlink       *string `json:"bitlink,omitempty"`
	ButtonId      *string `json:"button_id,omitempty"`
	Keyword       *string `json:"keyword,omitempty"`
	Title         *string `json:"title,omitempty"`
	IsPinned      *bool   `json:"is_pinned,omitempty"`
	IsActive      bool    `json:"is_active"`
	Domain        *string `json:"domain,omitempty"`
	ScheduleEnd   *string `json:"schedule_end,omitempty"`
	SortOrder     *int32  `json:"sort_order,omitempty"`
	LongUrl       *string `json:"long_url,omitempty"`
	Scheme        *string `json:"scheme,omitempty"`
	ScheduleStart *string `json:"schedule_start,omitempty"`
}

// NewLaunchpadButton instantiates a new LaunchpadButton object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchpadButton(isActive bool) *LaunchpadButton {
	this := LaunchpadButton{}
	this.IsActive = isActive
	return &this
}

// NewLaunchpadButtonWithDefaults instantiates a new LaunchpadButton object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchpadButtonWithDefaults() *LaunchpadButton {
	this := LaunchpadButton{}
	return &this
}

// GetLaunchpadId returns the LaunchpadId field value if set, zero value otherwise.
func (o *LaunchpadButton) GetLaunchpadId() string {
	if o == nil || o.LaunchpadId == nil {
		var ret string
		return ret
	}
	return *o.LaunchpadId
}

// GetLaunchpadIdOk returns a tuple with the LaunchpadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetLaunchpadIdOk() (*string, bool) {
	if o == nil || o.LaunchpadId == nil {
		return nil, false
	}
	return o.LaunchpadId, true
}

// HasLaunchpadId returns a boolean if a field has been set.
func (o *LaunchpadButton) HasLaunchpadId() bool {
	if o != nil && o.LaunchpadId != nil {
		return true
	}

	return false
}

// SetLaunchpadId gets a reference to the given string and assigns it to the LaunchpadId field.
func (o *LaunchpadButton) SetLaunchpadId(v string) {
	o.LaunchpadId = &v
}

// GetBitlink returns the Bitlink field value if set, zero value otherwise.
func (o *LaunchpadButton) GetBitlink() string {
	if o == nil || o.Bitlink == nil {
		var ret string
		return ret
	}
	return *o.Bitlink
}

// GetBitlinkOk returns a tuple with the Bitlink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetBitlinkOk() (*string, bool) {
	if o == nil || o.Bitlink == nil {
		return nil, false
	}
	return o.Bitlink, true
}

// HasBitlink returns a boolean if a field has been set.
func (o *LaunchpadButton) HasBitlink() bool {
	if o != nil && o.Bitlink != nil {
		return true
	}

	return false
}

// SetBitlink gets a reference to the given string and assigns it to the Bitlink field.
func (o *LaunchpadButton) SetBitlink(v string) {
	o.Bitlink = &v
}

// GetButtonId returns the ButtonId field value if set, zero value otherwise.
func (o *LaunchpadButton) GetButtonId() string {
	if o == nil || o.ButtonId == nil {
		var ret string
		return ret
	}
	return *o.ButtonId
}

// GetButtonIdOk returns a tuple with the ButtonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetButtonIdOk() (*string, bool) {
	if o == nil || o.ButtonId == nil {
		return nil, false
	}
	return o.ButtonId, true
}

// HasButtonId returns a boolean if a field has been set.
func (o *LaunchpadButton) HasButtonId() bool {
	if o != nil && o.ButtonId != nil {
		return true
	}

	return false
}

// SetButtonId gets a reference to the given string and assigns it to the ButtonId field.
func (o *LaunchpadButton) SetButtonId(v string) {
	o.ButtonId = &v
}

// GetKeyword returns the Keyword field value if set, zero value otherwise.
func (o *LaunchpadButton) GetKeyword() string {
	if o == nil || o.Keyword == nil {
		var ret string
		return ret
	}
	return *o.Keyword
}

// GetKeywordOk returns a tuple with the Keyword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetKeywordOk() (*string, bool) {
	if o == nil || o.Keyword == nil {
		return nil, false
	}
	return o.Keyword, true
}

// HasKeyword returns a boolean if a field has been set.
func (o *LaunchpadButton) HasKeyword() bool {
	if o != nil && o.Keyword != nil {
		return true
	}

	return false
}

// SetKeyword gets a reference to the given string and assigns it to the Keyword field.
func (o *LaunchpadButton) SetKeyword(v string) {
	o.Keyword = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *LaunchpadButton) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *LaunchpadButton) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *LaunchpadButton) SetTitle(v string) {
	o.Title = &v
}

// GetIsPinned returns the IsPinned field value if set, zero value otherwise.
func (o *LaunchpadButton) GetIsPinned() bool {
	if o == nil || o.IsPinned == nil {
		var ret bool
		return ret
	}
	return *o.IsPinned
}

// GetIsPinnedOk returns a tuple with the IsPinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetIsPinnedOk() (*bool, bool) {
	if o == nil || o.IsPinned == nil {
		return nil, false
	}
	return o.IsPinned, true
}

// HasIsPinned returns a boolean if a field has been set.
func (o *LaunchpadButton) HasIsPinned() bool {
	if o != nil && o.IsPinned != nil {
		return true
	}

	return false
}

// SetIsPinned gets a reference to the given bool and assigns it to the IsPinned field.
func (o *LaunchpadButton) SetIsPinned(v bool) {
	o.IsPinned = &v
}

// GetIsActive returns the IsActive field value
func (o *LaunchpadButton) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *LaunchpadButton) SetIsActive(v bool) {
	o.IsActive = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *LaunchpadButton) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *LaunchpadButton) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *LaunchpadButton) SetDomain(v string) {
	o.Domain = &v
}

// GetScheduleEnd returns the ScheduleEnd field value if set, zero value otherwise.
func (o *LaunchpadButton) GetScheduleEnd() string {
	if o == nil || o.ScheduleEnd == nil {
		var ret string
		return ret
	}
	return *o.ScheduleEnd
}

// GetScheduleEndOk returns a tuple with the ScheduleEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetScheduleEndOk() (*string, bool) {
	if o == nil || o.ScheduleEnd == nil {
		return nil, false
	}
	return o.ScheduleEnd, true
}

// HasScheduleEnd returns a boolean if a field has been set.
func (o *LaunchpadButton) HasScheduleEnd() bool {
	if o != nil && o.ScheduleEnd != nil {
		return true
	}

	return false
}

// SetScheduleEnd gets a reference to the given string and assigns it to the ScheduleEnd field.
func (o *LaunchpadButton) SetScheduleEnd(v string) {
	o.ScheduleEnd = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *LaunchpadButton) GetSortOrder() int32 {
	if o == nil || o.SortOrder == nil {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetSortOrderOk() (*int32, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *LaunchpadButton) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *LaunchpadButton) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetLongUrl returns the LongUrl field value if set, zero value otherwise.
func (o *LaunchpadButton) GetLongUrl() string {
	if o == nil || o.LongUrl == nil {
		var ret string
		return ret
	}
	return *o.LongUrl
}

// GetLongUrlOk returns a tuple with the LongUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetLongUrlOk() (*string, bool) {
	if o == nil || o.LongUrl == nil {
		return nil, false
	}
	return o.LongUrl, true
}

// HasLongUrl returns a boolean if a field has been set.
func (o *LaunchpadButton) HasLongUrl() bool {
	if o != nil && o.LongUrl != nil {
		return true
	}

	return false
}

// SetLongUrl gets a reference to the given string and assigns it to the LongUrl field.
func (o *LaunchpadButton) SetLongUrl(v string) {
	o.LongUrl = &v
}

// GetScheme returns the Scheme field value if set, zero value otherwise.
func (o *LaunchpadButton) GetScheme() string {
	if o == nil || o.Scheme == nil {
		var ret string
		return ret
	}
	return *o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetSchemeOk() (*string, bool) {
	if o == nil || o.Scheme == nil {
		return nil, false
	}
	return o.Scheme, true
}

// HasScheme returns a boolean if a field has been set.
func (o *LaunchpadButton) HasScheme() bool {
	if o != nil && o.Scheme != nil {
		return true
	}

	return false
}

// SetScheme gets a reference to the given string and assigns it to the Scheme field.
func (o *LaunchpadButton) SetScheme(v string) {
	o.Scheme = &v
}

// GetScheduleStart returns the ScheduleStart field value if set, zero value otherwise.
func (o *LaunchpadButton) GetScheduleStart() string {
	if o == nil || o.ScheduleStart == nil {
		var ret string
		return ret
	}
	return *o.ScheduleStart
}

// GetScheduleStartOk returns a tuple with the ScheduleStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchpadButton) GetScheduleStartOk() (*string, bool) {
	if o == nil || o.ScheduleStart == nil {
		return nil, false
	}
	return o.ScheduleStart, true
}

// HasScheduleStart returns a boolean if a field has been set.
func (o *LaunchpadButton) HasScheduleStart() bool {
	if o != nil && o.ScheduleStart != nil {
		return true
	}

	return false
}

// SetScheduleStart gets a reference to the given string and assigns it to the ScheduleStart field.
func (o *LaunchpadButton) SetScheduleStart(v string) {
	o.ScheduleStart = &v
}

func (o LaunchpadButton) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LaunchpadId != nil {
		toSerialize["launchpad_id"] = o.LaunchpadId
	}
	if o.Bitlink != nil {
		toSerialize["bitlink"] = o.Bitlink
	}
	if o.ButtonId != nil {
		toSerialize["button_id"] = o.ButtonId
	}
	if o.Keyword != nil {
		toSerialize["keyword"] = o.Keyword
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.IsPinned != nil {
		toSerialize["is_pinned"] = o.IsPinned
	}
	if true {
		toSerialize["is_active"] = o.IsActive
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.ScheduleEnd != nil {
		toSerialize["schedule_end"] = o.ScheduleEnd
	}
	if o.SortOrder != nil {
		toSerialize["sort_order"] = o.SortOrder
	}
	if o.LongUrl != nil {
		toSerialize["long_url"] = o.LongUrl
	}
	if o.Scheme != nil {
		toSerialize["scheme"] = o.Scheme
	}
	if o.ScheduleStart != nil {
		toSerialize["schedule_start"] = o.ScheduleStart
	}
	return json.Marshal(toSerialize)
}

type NullableLaunchpadButton struct {
	value *LaunchpadButton
	isSet bool
}

func (v NullableLaunchpadButton) Get() *LaunchpadButton {
	return v.value
}

func (v *NullableLaunchpadButton) Set(val *LaunchpadButton) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchpadButton) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchpadButton) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchpadButton(val *LaunchpadButton) *NullableLaunchpadButton {
	return &NullableLaunchpadButton{value: val, isSet: true}
}

func (v NullableLaunchpadButton) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchpadButton) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
