/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeviceMetricsAllOf struct for DeviceMetricsAllOf
type DeviceMetricsAllOf struct {
	Metrics *[]DeviceMetric `json:"metrics,omitempty"`
}

// NewDeviceMetricsAllOf instantiates a new DeviceMetricsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceMetricsAllOf() *DeviceMetricsAllOf {
	this := DeviceMetricsAllOf{}
	return &this
}

// NewDeviceMetricsAllOfWithDefaults instantiates a new DeviceMetricsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceMetricsAllOfWithDefaults() *DeviceMetricsAllOf {
	this := DeviceMetricsAllOf{}
	return &this
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *DeviceMetricsAllOf) GetMetrics() []DeviceMetric {
	if o == nil || o.Metrics == nil {
		var ret []DeviceMetric
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMetricsAllOf) GetMetricsOk() (*[]DeviceMetric, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *DeviceMetricsAllOf) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []DeviceMetric and assigns it to the Metrics field.
func (o *DeviceMetricsAllOf) SetMetrics(v []DeviceMetric) {
	o.Metrics = &v
}

func (o DeviceMetricsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceMetricsAllOf struct {
	value *DeviceMetricsAllOf
	isSet bool
}

func (v NullableDeviceMetricsAllOf) Get() *DeviceMetricsAllOf {
	return v.value
}

func (v *NullableDeviceMetricsAllOf) Set(val *DeviceMetricsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceMetricsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceMetricsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceMetricsAllOf(val *DeviceMetricsAllOf) *NullableDeviceMetricsAllOf {
	return &NullableDeviceMetricsAllOf{value: val, isSet: true}
}

func (v NullableDeviceMetricsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceMetricsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
