/*
Bitly API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.0
Contact: api@bitly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppAssociations struct for AppAssociations
type AppAssociations struct {
	AndroidInstallPreference *InstallPreference      `json:"android_install_preference,omitempty"`
	IosInstallPreference     *InstallPreference      `json:"ios_install_preference,omitempty"`
	AndroidApps              *[]AppAssociationDetail `json:"android_apps,omitempty"`
	CustomDomain             *string                 `json:"custom_domain,omitempty"`
	IosApps                  *[]AppAssociationDetail `json:"ios_apps,omitempty"`
}

// NewAppAssociations instantiates a new AppAssociations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppAssociations() *AppAssociations {
	this := AppAssociations{}
	return &this
}

// NewAppAssociationsWithDefaults instantiates a new AppAssociations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppAssociationsWithDefaults() *AppAssociations {
	this := AppAssociations{}
	return &this
}

// GetAndroidInstallPreference returns the AndroidInstallPreference field value if set, zero value otherwise.
func (o *AppAssociations) GetAndroidInstallPreference() InstallPreference {
	if o == nil || o.AndroidInstallPreference == nil {
		var ret InstallPreference
		return ret
	}
	return *o.AndroidInstallPreference
}

// GetAndroidInstallPreferenceOk returns a tuple with the AndroidInstallPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAssociations) GetAndroidInstallPreferenceOk() (*InstallPreference, bool) {
	if o == nil || o.AndroidInstallPreference == nil {
		return nil, false
	}
	return o.AndroidInstallPreference, true
}

// HasAndroidInstallPreference returns a boolean if a field has been set.
func (o *AppAssociations) HasAndroidInstallPreference() bool {
	if o != nil && o.AndroidInstallPreference != nil {
		return true
	}

	return false
}

// SetAndroidInstallPreference gets a reference to the given InstallPreference and assigns it to the AndroidInstallPreference field.
func (o *AppAssociations) SetAndroidInstallPreference(v InstallPreference) {
	o.AndroidInstallPreference = &v
}

// GetIosInstallPreference returns the IosInstallPreference field value if set, zero value otherwise.
func (o *AppAssociations) GetIosInstallPreference() InstallPreference {
	if o == nil || o.IosInstallPreference == nil {
		var ret InstallPreference
		return ret
	}
	return *o.IosInstallPreference
}

// GetIosInstallPreferenceOk returns a tuple with the IosInstallPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAssociations) GetIosInstallPreferenceOk() (*InstallPreference, bool) {
	if o == nil || o.IosInstallPreference == nil {
		return nil, false
	}
	return o.IosInstallPreference, true
}

// HasIosInstallPreference returns a boolean if a field has been set.
func (o *AppAssociations) HasIosInstallPreference() bool {
	if o != nil && o.IosInstallPreference != nil {
		return true
	}

	return false
}

// SetIosInstallPreference gets a reference to the given InstallPreference and assigns it to the IosInstallPreference field.
func (o *AppAssociations) SetIosInstallPreference(v InstallPreference) {
	o.IosInstallPreference = &v
}

// GetAndroidApps returns the AndroidApps field value if set, zero value otherwise.
func (o *AppAssociations) GetAndroidApps() []AppAssociationDetail {
	if o == nil || o.AndroidApps == nil {
		var ret []AppAssociationDetail
		return ret
	}
	return *o.AndroidApps
}

// GetAndroidAppsOk returns a tuple with the AndroidApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAssociations) GetAndroidAppsOk() (*[]AppAssociationDetail, bool) {
	if o == nil || o.AndroidApps == nil {
		return nil, false
	}
	return o.AndroidApps, true
}

// HasAndroidApps returns a boolean if a field has been set.
func (o *AppAssociations) HasAndroidApps() bool {
	if o != nil && o.AndroidApps != nil {
		return true
	}

	return false
}

// SetAndroidApps gets a reference to the given []AppAssociationDetail and assigns it to the AndroidApps field.
func (o *AppAssociations) SetAndroidApps(v []AppAssociationDetail) {
	o.AndroidApps = &v
}

// GetCustomDomain returns the CustomDomain field value if set, zero value otherwise.
func (o *AppAssociations) GetCustomDomain() string {
	if o == nil || o.CustomDomain == nil {
		var ret string
		return ret
	}
	return *o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAssociations) GetCustomDomainOk() (*string, bool) {
	if o == nil || o.CustomDomain == nil {
		return nil, false
	}
	return o.CustomDomain, true
}

// HasCustomDomain returns a boolean if a field has been set.
func (o *AppAssociations) HasCustomDomain() bool {
	if o != nil && o.CustomDomain != nil {
		return true
	}

	return false
}

// SetCustomDomain gets a reference to the given string and assigns it to the CustomDomain field.
func (o *AppAssociations) SetCustomDomain(v string) {
	o.CustomDomain = &v
}

// GetIosApps returns the IosApps field value if set, zero value otherwise.
func (o *AppAssociations) GetIosApps() []AppAssociationDetail {
	if o == nil || o.IosApps == nil {
		var ret []AppAssociationDetail
		return ret
	}
	return *o.IosApps
}

// GetIosAppsOk returns a tuple with the IosApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAssociations) GetIosAppsOk() (*[]AppAssociationDetail, bool) {
	if o == nil || o.IosApps == nil {
		return nil, false
	}
	return o.IosApps, true
}

// HasIosApps returns a boolean if a field has been set.
func (o *AppAssociations) HasIosApps() bool {
	if o != nil && o.IosApps != nil {
		return true
	}

	return false
}

// SetIosApps gets a reference to the given []AppAssociationDetail and assigns it to the IosApps field.
func (o *AppAssociations) SetIosApps(v []AppAssociationDetail) {
	o.IosApps = &v
}

func (o AppAssociations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AndroidInstallPreference != nil {
		toSerialize["android_install_preference"] = o.AndroidInstallPreference
	}
	if o.IosInstallPreference != nil {
		toSerialize["ios_install_preference"] = o.IosInstallPreference
	}
	if o.AndroidApps != nil {
		toSerialize["android_apps"] = o.AndroidApps
	}
	if o.CustomDomain != nil {
		toSerialize["custom_domain"] = o.CustomDomain
	}
	if o.IosApps != nil {
		toSerialize["ios_apps"] = o.IosApps
	}
	return json.Marshal(toSerialize)
}

type NullableAppAssociations struct {
	value *AppAssociations
	isSet bool
}

func (v NullableAppAssociations) Get() *AppAssociations {
	return v.value
}

func (v *NullableAppAssociations) Set(val *AppAssociations) {
	v.value = val
	v.isSet = true
}

func (v NullableAppAssociations) IsSet() bool {
	return v.isSet
}

func (v *NullableAppAssociations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppAssociations(val *AppAssociations) *NullableAppAssociations {
	return &NullableAppAssociations{value: val, isSet: true}
}

func (v NullableAppAssociations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppAssociations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
